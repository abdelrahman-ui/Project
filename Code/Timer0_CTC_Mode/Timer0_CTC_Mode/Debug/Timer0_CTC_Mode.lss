
Timer0_CTC_Mode.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000012a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  0000012a  000001be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800068  00800068  000001c6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001c6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  00000234  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000005cf  00000000  00000000  0000025c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000054c  00000000  00000000  0000082b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000202  00000000  00000000  00000d77  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000054  00000000  00000000  00000f7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000311  00000000  00000000  00000fd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000063  00000000  00000000  000012e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00001344  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 57 00 	jmp	0xae	; 0xae <__vector_10>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e2       	ldi	r30, 0x2A	; 42
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 36       	cpi	r26, 0x68	; 104
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a8 e6       	ldi	r26, 0x68	; 104
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	aa 36       	cpi	r26, 0x6A	; 106
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 93 00 	jmp	0x126	; 0x126 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
volatile unsigned short OC[4]={10,100,170,220,};
volatile unsigned short	OCR_COUNT=0;
int main(void)
{
	//Dir of PB3
	DDRB|=(1<<PB3);
  92:	bb 9a       	sbi	0x17, 3	; 23
	//CTC Mode &	NOPRESCALER  &	 TOGGLE 0C0 ON COMPARE
    TCCR0|=(1<<WGM01)|(1<<COM00)|(1<<CS00)	;
  94:	83 b7       	in	r24, 0x33	; 51
  96:	89 61       	ori	r24, 0x19	; 25
  98:	83 bf       	out	0x33, r24	; 51
	//Interrput
	TIMSK|=(1<<OCIE0)|(1<<TOV0);
  9a:	89 b7       	in	r24, 0x39	; 57
  9c:	83 60       	ori	r24, 0x03	; 3
  9e:	89 bf       	out	0x39, r24	; 57
	sei();			
  a0:	78 94       	sei
	OCR0=OC[0] ;
  a2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <OC>
  a6:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <OC+0x1>
  aa:	8c bf       	out	0x3c, r24	; 60
  ac:	ff cf       	rjmp	.-2      	; 0xac <main+0x1a>

000000ae <__vector_10>:
	}
}


ISR(TIMER0_COMP_vect)
{
  ae:	1f 92       	push	r1
  b0:	0f 92       	push	r0
  b2:	0f b6       	in	r0, 0x3f	; 63
  b4:	0f 92       	push	r0
  b6:	11 24       	eor	r1, r1
  b8:	8f 93       	push	r24
  ba:	9f 93       	push	r25
  bc:	ef 93       	push	r30
  be:	ff 93       	push	r31
	OCR_COUNT++;
  c0:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_end>
  c4:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <__data_end+0x1>
  c8:	01 96       	adiw	r24, 0x01	; 1
  ca:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <__data_end+0x1>
  ce:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__data_end>
	if(OCR_COUNT  <  4    )
  d2:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_end>
  d6:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <__data_end+0x1>
  da:	04 97       	sbiw	r24, 0x04	; 4
  dc:	60 f4       	brcc	.+24     	; 0xf6 <__vector_10+0x48>
	{
		OCR0=OC[OCR_COUNT];
  de:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <__data_end>
  e2:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <__data_end+0x1>
  e6:	ee 0f       	add	r30, r30
  e8:	ff 1f       	adc	r31, r31
  ea:	e0 5a       	subi	r30, 0xA0	; 160
  ec:	ff 4f       	sbci	r31, 0xFF	; 255
  ee:	80 81       	ld	r24, Z
  f0:	91 81       	ldd	r25, Z+1	; 0x01
  f2:	8c bf       	out	0x3c, r24	; 60
  f4:	0f c0       	rjmp	.+30     	; 0x114 <__vector_10+0x66>
	}
	else{
		OCR_COUNT =0;
  f6:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <__data_end+0x1>
  fa:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <__data_end>
		OCR0=OC[OCR_COUNT];
  fe:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <__data_end>
 102:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <__data_end+0x1>
 106:	ee 0f       	add	r30, r30
 108:	ff 1f       	adc	r31, r31
 10a:	e0 5a       	subi	r30, 0xA0	; 160
 10c:	ff 4f       	sbci	r31, 0xFF	; 255
 10e:	80 81       	ld	r24, Z
 110:	91 81       	ldd	r25, Z+1	; 0x01
 112:	8c bf       	out	0x3c, r24	; 60
	}
	
 114:	ff 91       	pop	r31
 116:	ef 91       	pop	r30
 118:	9f 91       	pop	r25
 11a:	8f 91       	pop	r24
 11c:	0f 90       	pop	r0
 11e:	0f be       	out	0x3f, r0	; 63
 120:	0f 90       	pop	r0
 122:	1f 90       	pop	r1
 124:	18 95       	reti

00000126 <_exit>:
 126:	f8 94       	cli

00000128 <__stop_program>:
 128:	ff cf       	rjmp	.-2      	; 0x128 <__stop_program>

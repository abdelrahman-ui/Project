
ADC_FAN_LM35.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000d4c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000056  00800060  00000d4c  00000dc0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00000e16  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000e74  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00000eb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ead  00000000  00000000  00000f28  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007cc  00000000  00000000  00001dd5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000679  00000000  00000000  000025a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e0  00000000  00000000  00002c1c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003e9  00000000  00000000  00002cfc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000632  00000000  00000000  000030e5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00003717  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e4       	ldi	r30, 0x4C	; 76
  68:	fd e0       	ldi	r31, 0x0D	; 13
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 3b       	cpi	r26, 0xB6	; 182
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 e7 00 	call	0x1ce	; 0x1ce <main>
  7a:	0c 94 a4 06 	jmp	0xd48	; 0xd48 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <LCD_Command>:
	if (row == 0 && pos<16)
	LCD_Command((pos & 0x0F)|0x80);	/* Command of first row and required position<16 */
	else if (row == 1 && pos<16)
	LCD_Command((pos & 0x0F)|0xC0);	/* Command of first row and required position<16 */
	LCD_String(str);		/* Call LCD string function */
}
  82:	9b b3       	in	r25, 0x1b	; 27
  84:	9f 70       	andi	r25, 0x0F	; 15
  86:	28 2f       	mov	r18, r24
  88:	20 7f       	andi	r18, 0xF0	; 240
  8a:	92 2b       	or	r25, r18
  8c:	9b bb       	out	0x1b, r25	; 27
  8e:	c1 98       	cbi	0x18, 1	; 24
  90:	c3 9a       	sbi	0x18, 3	; 24
  92:	35 e3       	ldi	r19, 0x35	; 53
  94:	3a 95       	dec	r19
  96:	f1 f7       	brne	.-4      	; 0x94 <LCD_Command+0x12>
  98:	00 00       	nop
  9a:	c3 98       	cbi	0x18, 3	; 24
  9c:	ef e3       	ldi	r30, 0x3F	; 63
  9e:	ff e1       	ldi	r31, 0x1F	; 31
  a0:	31 97       	sbiw	r30, 0x01	; 1
  a2:	f1 f7       	brne	.-4      	; 0xa0 <LCD_Command+0x1e>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <LCD_Command+0x24>
  a6:	00 00       	nop
  a8:	2b b3       	in	r18, 0x1b	; 27
  aa:	2f 70       	andi	r18, 0x0F	; 15
  ac:	f0 e1       	ldi	r31, 0x10	; 16
  ae:	8f 9f       	mul	r24, r31
  b0:	c0 01       	movw	r24, r0
  b2:	11 24       	eor	r1, r1
  b4:	82 2b       	or	r24, r18
  b6:	8b bb       	out	0x1b, r24	; 27
  b8:	c3 9a       	sbi	0x18, 3	; 24
  ba:	35 e0       	ldi	r19, 0x05	; 5
  bc:	3a 95       	dec	r19
  be:	f1 f7       	brne	.-4      	; 0xbc <LCD_Command+0x3a>
  c0:	00 00       	nop
  c2:	c3 98       	cbi	0x18, 3	; 24
  c4:	8f e3       	ldi	r24, 0x3F	; 63
  c6:	9f e1       	ldi	r25, 0x1F	; 31
  c8:	01 97       	sbiw	r24, 0x01	; 1
  ca:	f1 f7       	brne	.-4      	; 0xc8 <LCD_Command+0x46>
  cc:	00 c0       	rjmp	.+0      	; 0xce <LCD_Command+0x4c>
  ce:	00 00       	nop
  d0:	08 95       	ret

000000d2 <LCD_Init>:
  d2:	8f ef       	ldi	r24, 0xFF	; 255
  d4:	8a bb       	out	0x1a, r24	; 26
  d6:	8f e0       	ldi	r24, 0x0F	; 15
  d8:	87 bb       	out	0x17, r24	; 23
  da:	c2 98       	cbi	0x18, 2	; 24
  dc:	2f ef       	ldi	r18, 0xFF	; 255
  de:	89 ef       	ldi	r24, 0xF9	; 249
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	21 50       	subi	r18, 0x01	; 1
  e4:	80 40       	sbci	r24, 0x00	; 0
  e6:	90 40       	sbci	r25, 0x00	; 0
  e8:	e1 f7       	brne	.-8      	; 0xe2 <LCD_Init+0x10>
  ea:	00 c0       	rjmp	.+0      	; 0xec <LCD_Init+0x1a>
  ec:	00 00       	nop
  ee:	83 e3       	ldi	r24, 0x33	; 51
  f0:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
  f4:	82 e3       	ldi	r24, 0x32	; 50
  f6:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
  fa:	88 e2       	ldi	r24, 0x28	; 40
  fc:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 100:	8c e0       	ldi	r24, 0x0C	; 12
 102:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 106:	86 e0       	ldi	r24, 0x06	; 6
 108:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 112:	08 95       	ret

00000114 <LCD_Char>:
 114:	9b b3       	in	r25, 0x1b	; 27
 116:	9f 70       	andi	r25, 0x0F	; 15
 118:	28 2f       	mov	r18, r24
 11a:	20 7f       	andi	r18, 0xF0	; 240
 11c:	92 2b       	or	r25, r18
 11e:	9b bb       	out	0x1b, r25	; 27
 120:	c1 9a       	sbi	0x18, 1	; 24
 122:	c3 9a       	sbi	0x18, 3	; 24
 124:	35 e3       	ldi	r19, 0x35	; 53
 126:	3a 95       	dec	r19
 128:	f1 f7       	brne	.-4      	; 0x126 <LCD_Char+0x12>
 12a:	00 00       	nop
 12c:	c3 98       	cbi	0x18, 3	; 24
 12e:	ef e1       	ldi	r30, 0x1F	; 31
 130:	f3 e0       	ldi	r31, 0x03	; 3
 132:	31 97       	sbiw	r30, 0x01	; 1
 134:	f1 f7       	brne	.-4      	; 0x132 <LCD_Char+0x1e>
 136:	00 c0       	rjmp	.+0      	; 0x138 <LCD_Char+0x24>
 138:	00 00       	nop
 13a:	2b b3       	in	r18, 0x1b	; 27
 13c:	2f 70       	andi	r18, 0x0F	; 15
 13e:	f0 e1       	ldi	r31, 0x10	; 16
 140:	8f 9f       	mul	r24, r31
 142:	c0 01       	movw	r24, r0
 144:	11 24       	eor	r1, r1
 146:	82 2b       	or	r24, r18
 148:	8b bb       	out	0x1b, r24	; 27
 14a:	c3 9a       	sbi	0x18, 3	; 24
 14c:	35 e3       	ldi	r19, 0x35	; 53
 14e:	3a 95       	dec	r19
 150:	f1 f7       	brne	.-4      	; 0x14e <LCD_Char+0x3a>
 152:	00 00       	nop
 154:	c3 98       	cbi	0x18, 3	; 24
 156:	8f e5       	ldi	r24, 0x5F	; 95
 158:	9d e6       	ldi	r25, 0x6D	; 109
 15a:	01 97       	sbiw	r24, 0x01	; 1
 15c:	f1 f7       	brne	.-4      	; 0x15a <LCD_Char+0x46>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <LCD_Char+0x4c>
 160:	00 00       	nop
 162:	08 95       	ret

00000164 <LCD_String>:
 164:	cf 93       	push	r28
 166:	df 93       	push	r29
 168:	ec 01       	movw	r28, r24
 16a:	88 81       	ld	r24, Y
 16c:	88 23       	and	r24, r24
 16e:	31 f0       	breq	.+12     	; 0x17c <LCD_String+0x18>
 170:	21 96       	adiw	r28, 0x01	; 1
 172:	0e 94 8a 00 	call	0x114	; 0x114 <LCD_Char>
 176:	89 91       	ld	r24, Y+
 178:	81 11       	cpse	r24, r1
 17a:	fb cf       	rjmp	.-10     	; 0x172 <LCD_String+0xe>
 17c:	df 91       	pop	r29
 17e:	cf 91       	pop	r28
 180:	08 95       	ret

00000182 <LCD_Clear>:
/*

*/
void LCD_Clear()
{
	LCD_Command (0x01);		/* Clear display */
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 188:	8f e3       	ldi	r24, 0x3F	; 63
 18a:	9f e1       	ldi	r25, 0x1F	; 31
 18c:	01 97       	sbiw	r24, 0x01	; 1
 18e:	f1 f7       	brne	.-4      	; 0x18c <LCD_Clear+0xa>
 190:	00 c0       	rjmp	.+0      	; 0x192 <LCD_Clear+0x10>
 192:	00 00       	nop
	_delay_ms(2);
	LCD_Command (0x80);		/* Cursor at home position */
 194:	80 e8       	ldi	r24, 0x80	; 128
 196:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 19a:	08 95       	ret

0000019c <ADC_Init>:
	}
	return 0;
}

void ADC_Init(){
	DDRA &=~(1<<0);
 19c:	d0 98       	cbi	0x1a, 0	; 26
	DDRA &=~(1<<1);						        /* Make ADC port as input */
 19e:	d1 98       	cbi	0x1a, 1	; 26
	ADCSRA =(1<<ADPS0) | (1<<ADPS1)	|(1<<ADPS2) | (1<<ADATE) | (1<<ADEN);							/* Enable ADC, with freq/128  */
 1a0:	87 ea       	ldi	r24, 0xA7	; 167
 1a2:	86 b9       	out	0x06, r24	; 6
	ADMUX =(1<<REFS0) | (1<<REFS1) |(1<<ADMUX0);		/* Vref: Internal , ADC channel: 1 */
 1a4:	81 ec       	ldi	r24, 0xC1	; 193
 1a6:	87 b9       	out	0x07, r24	; 7
 1a8:	08 95       	ret

000001aa <ADC_Read>:
}

unsigned int ADC_Read(char channel)
{
	ADMUX = 0xC0 | (channel & 0x07);				/* set input channel to read */
 1aa:	87 70       	andi	r24, 0x07	; 7
 1ac:	80 6c       	ori	r24, 0xC0	; 192
 1ae:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADSC);							/* Start ADC conversion */
 1b0:	36 9a       	sbi	0x06, 6	; 6
	while (!(ADCSRA & (1<<ADIF)));					/* Wait until end of conversion by polling ADC interrupt flag */
 1b2:	34 9b       	sbis	0x06, 4	; 6
 1b4:	fe cf       	rjmp	.-4      	; 0x1b2 <ADC_Read+0x8>
	ADCSRA |= (1<<ADIF);							/* Clear interrupt flag */
 1b6:	34 9a       	sbi	0x06, 4	; 6
 1b8:	8f e9       	ldi	r24, 0x9F	; 159
 1ba:	9f e0       	ldi	r25, 0x0F	; 15
 1bc:	01 97       	sbiw	r24, 0x01	; 1
 1be:	f1 f7       	brne	.-4      	; 0x1bc <ADC_Read+0x12>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <ADC_Read+0x18>
 1c2:	00 00       	nop
	_delay_ms(1);									/* Wait a little bit */
	
	unsigned int dataADC=ADCL;
 1c4:	84 b1       	in	r24, 0x04	; 4
	dataADC|=(ADCH<<8);
 1c6:	25 b1       	in	r18, 0x05	; 5
	return dataADC;
 1c8:	90 e0       	ldi	r25, 0x00	; 0
	//return ADCW;									/* Return ADC word */
	
 1ca:	92 2b       	or	r25, r18
 1cc:	08 95       	ret

000001ce <main>:
//Prototype
void ADC_Init();
unsigned int ADC_Read(char channel);

int main()
{
 1ce:	cf 93       	push	r28
 1d0:	df 93       	push	r29
 1d2:	cd b7       	in	r28, 0x3d	; 61
 1d4:	de b7       	in	r29, 0x3e	; 62
 1d6:	64 97       	sbiw	r28, 0x14	; 20
 1d8:	0f b6       	in	r0, 0x3f	; 63
 1da:	f8 94       	cli
 1dc:	de bf       	out	0x3e, r29	; 62
 1de:	0f be       	out	0x3f, r0	; 63
 1e0:	cd bf       	out	0x3d, r28	; 61
	char Temperature[10],voltage[10];
	float celsius,volt;
	
	DDRD|=(1<<Fan)|(1<<WHITE_LED)|(1<<Red_LED);
 1e2:	81 b3       	in	r24, 0x11	; 17
 1e4:	87 60       	ori	r24, 0x07	; 7
 1e6:	81 bb       	out	0x11, r24	; 17
	LCD_Init();                 /* initialize 16x2 LCD*/
 1e8:	0e 94 69 00 	call	0xd2	; 0xd2 <LCD_Init>
	ADC_Init();                 /* initialize ADC*/
 1ec:	0e 94 ce 00 	call	0x19c	; 0x19c <ADC_Init>
	LCD_Clear();
 1f0:	0e 94 c1 00 	call	0x182	; 0x182 <LCD_Clear>
		LCD_Clear();
		LCD_Command(0x80);		/* Go to 1st line*/
		//LCD_String_xy(0,0,"Temperature");
		celsius = (ADC_Read(0)*2.5);
		celsius = (celsius/10.00); //equation of temperature sensor
		sprintf(Temperature,"%d%cC",(int)celsius, degree_sysmbol);               // convert integer value to ASCII string
 1f4:	0f 2e       	mov	r0, r31
 1f6:	ff ed       	ldi	r31, 0xDF	; 223
 1f8:	9f 2e       	mov	r9, r31
 1fa:	f0 2d       	mov	r31, r0
 1fc:	0f 2e       	mov	r0, r31
 1fe:	f0 e6       	ldi	r31, 0x60	; 96
 200:	af 2e       	mov	r10, r31
 202:	f0 e0       	ldi	r31, 0x00	; 0
 204:	bf 2e       	mov	r11, r31
 206:	f0 2d       	mov	r31, r0
 208:	ce 01       	movw	r24, r28
 20a:	01 96       	adiw	r24, 0x01	; 1
 20c:	6c 01       	movw	r12, r24
		//Read The frist voltage
		LCD_Clear();
		LCD_Command(0x80);		// Go to 1st line
		volt = (ADC_Read(1)*5);
		volt =volt/255.0;
		sprintf(voltage,"%d",volt);               // convert integer value to ASCII string
 20e:	0f 2e       	mov	r0, r31
 210:	fe e9       	ldi	r31, 0x9E	; 158
 212:	ef 2e       	mov	r14, r31
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	ff 2e       	mov	r15, r31
 218:	f0 2d       	mov	r31, r0
 21a:	8e 01       	movw	r16, r28
 21c:	05 5f       	subi	r16, 0xF5	; 245
 21e:	1f 4f       	sbci	r17, 0xFF	; 255
	LCD_Init();                 /* initialize 16x2 LCD*/
	ADC_Init();                 /* initialize ADC*/
	LCD_Clear();
	while(1)
	{
		LCD_Clear();
 220:	0e 94 c1 00 	call	0x182	; 0x182 <LCD_Clear>
		LCD_Command(0x80);		/* Go to 1st line*/
 224:	80 e8       	ldi	r24, 0x80	; 128
 226:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
		//LCD_String_xy(0,0,"Temperature");
		celsius = (ADC_Read(0)*2.5);
 22a:	80 e0       	ldi	r24, 0x00	; 0
 22c:	0e 94 d5 00 	call	0x1aa	; 0x1aa <ADC_Read>
 230:	bc 01       	movw	r22, r24
 232:	80 e0       	ldi	r24, 0x00	; 0
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	0e 94 96 02 	call	0x52c	; 0x52c <__floatunsisf>
 23a:	20 e0       	ldi	r18, 0x00	; 0
 23c:	30 e0       	ldi	r19, 0x00	; 0
 23e:	40 e2       	ldi	r20, 0x20	; 32
 240:	50 e4       	ldi	r21, 0x40	; 64
 242:	0e 94 4d 03 	call	0x69a	; 0x69a <__mulsf3>
		celsius = (celsius/10.00); //equation of temperature sensor
 246:	20 e0       	ldi	r18, 0x00	; 0
 248:	30 e0       	ldi	r19, 0x00	; 0
 24a:	40 e2       	ldi	r20, 0x20	; 32
 24c:	51 e4       	ldi	r21, 0x41	; 65
 24e:	0e 94 ee 01 	call	0x3dc	; 0x3dc <__divsf3>
 252:	2b 01       	movw	r4, r22
 254:	3c 01       	movw	r6, r24
		sprintf(Temperature,"%d%cC",(int)celsius, degree_sysmbol);               // convert integer value to ASCII string
 256:	1f 92       	push	r1
 258:	9f 92       	push	r9
 25a:	0e 94 60 02 	call	0x4c0	; 0x4c0 <__fixsfsi>
 25e:	7f 93       	push	r23
 260:	6f 93       	push	r22
 262:	bf 92       	push	r11
 264:	af 92       	push	r10
 266:	df 92       	push	r13
 268:	cf 92       	push	r12
 26a:	0e 94 ba 03 	call	0x774	; 0x774 <sprintf>
		LCD_String("Temperature= ");
 26e:	86 e6       	ldi	r24, 0x66	; 102
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	0e 94 b2 00 	call	0x164	; 0x164 <LCD_String>
		LCD_String(Temperature);                // send string data for printing
 276:	c6 01       	movw	r24, r12
 278:	0e 94 b2 00 	call	0x164	; 0x164 <LCD_String>
 27c:	9f ef       	ldi	r25, 0xFF	; 255
 27e:	21 ee       	ldi	r18, 0xE1	; 225
 280:	84 e0       	ldi	r24, 0x04	; 4
 282:	91 50       	subi	r25, 0x01	; 1
 284:	20 40       	sbci	r18, 0x00	; 0
 286:	80 40       	sbci	r24, 0x00	; 0
 288:	e1 f7       	brne	.-8      	; 0x282 <main+0xb4>
 28a:	00 c0       	rjmp	.+0      	; 0x28c <main+0xbe>
 28c:	00 00       	nop
		_delay_ms(100);
		/*
		memset(Temperature,0,10);
		*/
		if(celsius>30)
 28e:	0f b6       	in	r0, 0x3f	; 63
 290:	f8 94       	cli
 292:	de bf       	out	0x3e, r29	; 62
 294:	0f be       	out	0x3f, r0	; 63
 296:	cd bf       	out	0x3d, r28	; 61
 298:	20 e0       	ldi	r18, 0x00	; 0
 29a:	30 e0       	ldi	r19, 0x00	; 0
 29c:	40 ef       	ldi	r20, 0xF0	; 240
 29e:	51 e4       	ldi	r21, 0x41	; 65
 2a0:	c3 01       	movw	r24, r6
 2a2:	b2 01       	movw	r22, r4
 2a4:	0e 94 48 03 	call	0x690	; 0x690 <__gesf2>
 2a8:	18 16       	cp	r1, r24
 2aa:	84 f4       	brge	.+32     	; 0x2cc <main+0xfe>
		{
			
			PORTD&=~(1<<WHITE_LED);		//WHITE LED OFF	
 2ac:	91 98       	cbi	0x12, 1	; 18
			LCD_Clear();
 2ae:	0e 94 c1 00 	call	0x182	; 0x182 <LCD_Clear>
			LCD_String("RED LED ON");
 2b2:	84 e7       	ldi	r24, 0x74	; 116
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	0e 94 b2 00 	call	0x164	; 0x164 <LCD_String>
			PORTD|=(1<<Red_LED);
 2ba:	90 9a       	sbi	0x12, 0	; 18
			LCD_Command(0XC0);
 2bc:	80 ec       	ldi	r24, 0xC0	; 192
 2be:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
			LCD_String(" FAN ON");
 2c2:	8f e7       	ldi	r24, 0x7F	; 127
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	0e 94 b2 00 	call	0x164	; 0x164 <LCD_String>
			PORTD|=(1<<Fan);
 2ca:	92 9a       	sbi	0x12, 2	; 18
			
		}
		if(celsius<30)
 2cc:	20 e0       	ldi	r18, 0x00	; 0
 2ce:	30 e0       	ldi	r19, 0x00	; 0
 2d0:	40 ef       	ldi	r20, 0xF0	; 240
 2d2:	51 e4       	ldi	r21, 0x41	; 65
 2d4:	c3 01       	movw	r24, r6
 2d6:	b2 01       	movw	r22, r4
 2d8:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <__cmpsf2>
 2dc:	88 23       	and	r24, r24
 2de:	84 f4       	brge	.+32     	; 0x300 <main+0x132>
		{
			PORTD&=~(1<<Red_LED);			//RED LED OFF
 2e0:	90 98       	cbi	0x12, 0	; 18
			LCD_Clear();
 2e2:	0e 94 c1 00 	call	0x182	; 0x182 <LCD_Clear>
			LCD_String("WHite LED  ON");
 2e6:	87 e8       	ldi	r24, 0x87	; 135
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	0e 94 b2 00 	call	0x164	; 0x164 <LCD_String>
			PORTD|=(1<<WHITE_LED);
 2ee:	91 9a       	sbi	0x12, 1	; 18
			LCD_Command(0XC0);
 2f0:	80 ec       	ldi	r24, 0xC0	; 192
 2f2:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
			LCD_String(" FAN OFF");
 2f6:	85 e9       	ldi	r24, 0x95	; 149
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	0e 94 b2 00 	call	0x164	; 0x164 <LCD_String>
			PORTD&=~(1<<Fan);
 2fe:	92 98       	cbi	0x12, 2	; 18
																							//FAN OFF I CAN NOT
			
		}
		//Read The frist voltage
		LCD_Clear();
 300:	0e 94 c1 00 	call	0x182	; 0x182 <LCD_Clear>
		LCD_Command(0x80);		// Go to 1st line
 304:	80 e8       	ldi	r24, 0x80	; 128
 306:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
		volt = (ADC_Read(1)*5);
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	0e 94 d5 00 	call	0x1aa	; 0x1aa <ADC_Read>
 310:	bc 01       	movw	r22, r24
 312:	66 0f       	add	r22, r22
 314:	77 1f       	adc	r23, r23
 316:	66 0f       	add	r22, r22
 318:	77 1f       	adc	r23, r23
 31a:	86 0f       	add	r24, r22
 31c:	97 1f       	adc	r25, r23
 31e:	bc 01       	movw	r22, r24
 320:	80 e0       	ldi	r24, 0x00	; 0
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	0e 94 96 02 	call	0x52c	; 0x52c <__floatunsisf>
		volt =volt/255.0;
		sprintf(voltage,"%d",volt);               // convert integer value to ASCII string
 328:	20 e0       	ldi	r18, 0x00	; 0
 32a:	30 e0       	ldi	r19, 0x00	; 0
 32c:	4f e7       	ldi	r20, 0x7F	; 127
 32e:	53 e4       	ldi	r21, 0x43	; 67
 330:	0e 94 ee 01 	call	0x3dc	; 0x3dc <__divsf3>
 334:	9f 93       	push	r25
 336:	8f 93       	push	r24
 338:	7f 93       	push	r23
 33a:	6f 93       	push	r22
 33c:	ff 92       	push	r15
 33e:	ef 92       	push	r14
 340:	1f 93       	push	r17
 342:	0f 93       	push	r16
 344:	0e 94 ba 03 	call	0x774	; 0x774 <sprintf>
		LCD_String("volT(1)= ");
 348:	81 ea       	ldi	r24, 0xA1	; 161
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	0e 94 b2 00 	call	0x164	; 0x164 <LCD_String>
		LCD_String(voltage);                // send string data for printing
 350:	c8 01       	movw	r24, r16
 352:	0e 94 b2 00 	call	0x164	; 0x164 <LCD_String>
		LCD_Char('V');
 356:	86 e5       	ldi	r24, 0x56	; 86
 358:	0e 94 8a 00 	call	0x114	; 0x114 <LCD_Char>
		//Read The Second voltage
		LCD_Command(0xC0);		// Go to 1st line
 35c:	80 ec       	ldi	r24, 0xC0	; 192
 35e:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
		volt = (ADC_Read(2)*5);
 362:	82 e0       	ldi	r24, 0x02	; 2
 364:	0e 94 d5 00 	call	0x1aa	; 0x1aa <ADC_Read>
 368:	bc 01       	movw	r22, r24
 36a:	66 0f       	add	r22, r22
 36c:	77 1f       	adc	r23, r23
 36e:	66 0f       	add	r22, r22
 370:	77 1f       	adc	r23, r23
 372:	86 0f       	add	r24, r22
 374:	97 1f       	adc	r25, r23
 376:	bc 01       	movw	r22, r24
 378:	80 e0       	ldi	r24, 0x00	; 0
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	0e 94 96 02 	call	0x52c	; 0x52c <__floatunsisf>
		volt =volt/255.0;
		sprintf(voltage,"%d",volt);               // convert integer value to ASCII string
 380:	20 e0       	ldi	r18, 0x00	; 0
 382:	30 e0       	ldi	r19, 0x00	; 0
 384:	4f e7       	ldi	r20, 0x7F	; 127
 386:	53 e4       	ldi	r21, 0x43	; 67
 388:	0e 94 ee 01 	call	0x3dc	; 0x3dc <__divsf3>
 38c:	9f 93       	push	r25
 38e:	8f 93       	push	r24
 390:	7f 93       	push	r23
 392:	6f 93       	push	r22
 394:	ff 92       	push	r15
 396:	ef 92       	push	r14
 398:	1f 93       	push	r17
 39a:	0f 93       	push	r16
 39c:	0e 94 ba 03 	call	0x774	; 0x774 <sprintf>
		LCD_String("volt(2)= ");
 3a0:	8b ea       	ldi	r24, 0xAB	; 171
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	0e 94 b2 00 	call	0x164	; 0x164 <LCD_String>
		LCD_String(voltage);                // send string data for printing
 3a8:	c8 01       	movw	r24, r16
 3aa:	0e 94 b2 00 	call	0x164	; 0x164 <LCD_String>
		LCD_Char('V');
 3ae:	86 e5       	ldi	r24, 0x56	; 86
 3b0:	0e 94 8a 00 	call	0x114	; 0x114 <LCD_Char>
 3b4:	9f ef       	ldi	r25, 0xFF	; 255
 3b6:	21 ee       	ldi	r18, 0xE1	; 225
 3b8:	84 e0       	ldi	r24, 0x04	; 4
 3ba:	91 50       	subi	r25, 0x01	; 1
 3bc:	20 40       	sbci	r18, 0x00	; 0
 3be:	80 40       	sbci	r24, 0x00	; 0
 3c0:	e1 f7       	brne	.-8      	; 0x3ba <main+0x1ec>
 3c2:	00 c0       	rjmp	.+0      	; 0x3c4 <main+0x1f6>
 3c4:	00 00       	nop
 3c6:	0f b6       	in	r0, 0x3f	; 63
 3c8:	f8 94       	cli
 3ca:	de bf       	out	0x3e, r29	; 62
 3cc:	0f be       	out	0x3f, r0	; 63
 3ce:	cd bf       	out	0x3d, r28	; 61
 3d0:	27 cf       	rjmp	.-434    	; 0x220 <main+0x52>

000003d2 <__cmpsf2>:
 3d2:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <__fp_cmp>
 3d6:	08 f4       	brcc	.+2      	; 0x3da <__cmpsf2+0x8>
 3d8:	81 e0       	ldi	r24, 0x01	; 1
 3da:	08 95       	ret

000003dc <__divsf3>:
 3dc:	0e 94 02 02 	call	0x404	; 0x404 <__divsf3x>
 3e0:	0c 94 0e 03 	jmp	0x61c	; 0x61c <__fp_round>
 3e4:	0e 94 07 03 	call	0x60e	; 0x60e <__fp_pscB>
 3e8:	58 f0       	brcs	.+22     	; 0x400 <__LOCK_REGION_LENGTH__>
 3ea:	0e 94 00 03 	call	0x600	; 0x600 <__fp_pscA>
 3ee:	40 f0       	brcs	.+16     	; 0x400 <__LOCK_REGION_LENGTH__>
 3f0:	29 f4       	brne	.+10     	; 0x3fc <__divsf3+0x20>
 3f2:	5f 3f       	cpi	r21, 0xFF	; 255
 3f4:	29 f0       	breq	.+10     	; 0x400 <__LOCK_REGION_LENGTH__>
 3f6:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__fp_inf>
 3fa:	51 11       	cpse	r21, r1
 3fc:	0c 94 42 03 	jmp	0x684	; 0x684 <__fp_szero>
 400:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__fp_nan>

00000404 <__divsf3x>:
 404:	0e 94 1f 03 	call	0x63e	; 0x63e <__fp_split3>
 408:	68 f3       	brcs	.-38     	; 0x3e4 <__divsf3+0x8>

0000040a <__divsf3_pse>:
 40a:	99 23       	and	r25, r25
 40c:	b1 f3       	breq	.-20     	; 0x3fa <__divsf3+0x1e>
 40e:	55 23       	and	r21, r21
 410:	91 f3       	breq	.-28     	; 0x3f6 <__divsf3+0x1a>
 412:	95 1b       	sub	r25, r21
 414:	55 0b       	sbc	r21, r21
 416:	bb 27       	eor	r27, r27
 418:	aa 27       	eor	r26, r26
 41a:	62 17       	cp	r22, r18
 41c:	73 07       	cpc	r23, r19
 41e:	84 07       	cpc	r24, r20
 420:	38 f0       	brcs	.+14     	; 0x430 <__divsf3_pse+0x26>
 422:	9f 5f       	subi	r25, 0xFF	; 255
 424:	5f 4f       	sbci	r21, 0xFF	; 255
 426:	22 0f       	add	r18, r18
 428:	33 1f       	adc	r19, r19
 42a:	44 1f       	adc	r20, r20
 42c:	aa 1f       	adc	r26, r26
 42e:	a9 f3       	breq	.-22     	; 0x41a <__divsf3_pse+0x10>
 430:	35 d0       	rcall	.+106    	; 0x49c <__divsf3_pse+0x92>
 432:	0e 2e       	mov	r0, r30
 434:	3a f0       	brmi	.+14     	; 0x444 <__divsf3_pse+0x3a>
 436:	e0 e8       	ldi	r30, 0x80	; 128
 438:	32 d0       	rcall	.+100    	; 0x49e <__divsf3_pse+0x94>
 43a:	91 50       	subi	r25, 0x01	; 1
 43c:	50 40       	sbci	r21, 0x00	; 0
 43e:	e6 95       	lsr	r30
 440:	00 1c       	adc	r0, r0
 442:	ca f7       	brpl	.-14     	; 0x436 <__divsf3_pse+0x2c>
 444:	2b d0       	rcall	.+86     	; 0x49c <__divsf3_pse+0x92>
 446:	fe 2f       	mov	r31, r30
 448:	29 d0       	rcall	.+82     	; 0x49c <__divsf3_pse+0x92>
 44a:	66 0f       	add	r22, r22
 44c:	77 1f       	adc	r23, r23
 44e:	88 1f       	adc	r24, r24
 450:	bb 1f       	adc	r27, r27
 452:	26 17       	cp	r18, r22
 454:	37 07       	cpc	r19, r23
 456:	48 07       	cpc	r20, r24
 458:	ab 07       	cpc	r26, r27
 45a:	b0 e8       	ldi	r27, 0x80	; 128
 45c:	09 f0       	breq	.+2      	; 0x460 <__divsf3_pse+0x56>
 45e:	bb 0b       	sbc	r27, r27
 460:	80 2d       	mov	r24, r0
 462:	bf 01       	movw	r22, r30
 464:	ff 27       	eor	r31, r31
 466:	93 58       	subi	r25, 0x83	; 131
 468:	5f 4f       	sbci	r21, 0xFF	; 255
 46a:	3a f0       	brmi	.+14     	; 0x47a <__divsf3_pse+0x70>
 46c:	9e 3f       	cpi	r25, 0xFE	; 254
 46e:	51 05       	cpc	r21, r1
 470:	78 f0       	brcs	.+30     	; 0x490 <__divsf3_pse+0x86>
 472:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__fp_inf>
 476:	0c 94 42 03 	jmp	0x684	; 0x684 <__fp_szero>
 47a:	5f 3f       	cpi	r21, 0xFF	; 255
 47c:	e4 f3       	brlt	.-8      	; 0x476 <__divsf3_pse+0x6c>
 47e:	98 3e       	cpi	r25, 0xE8	; 232
 480:	d4 f3       	brlt	.-12     	; 0x476 <__divsf3_pse+0x6c>
 482:	86 95       	lsr	r24
 484:	77 95       	ror	r23
 486:	67 95       	ror	r22
 488:	b7 95       	ror	r27
 48a:	f7 95       	ror	r31
 48c:	9f 5f       	subi	r25, 0xFF	; 255
 48e:	c9 f7       	brne	.-14     	; 0x482 <__divsf3_pse+0x78>
 490:	88 0f       	add	r24, r24
 492:	91 1d       	adc	r25, r1
 494:	96 95       	lsr	r25
 496:	87 95       	ror	r24
 498:	97 f9       	bld	r25, 7
 49a:	08 95       	ret
 49c:	e1 e0       	ldi	r30, 0x01	; 1
 49e:	66 0f       	add	r22, r22
 4a0:	77 1f       	adc	r23, r23
 4a2:	88 1f       	adc	r24, r24
 4a4:	bb 1f       	adc	r27, r27
 4a6:	62 17       	cp	r22, r18
 4a8:	73 07       	cpc	r23, r19
 4aa:	84 07       	cpc	r24, r20
 4ac:	ba 07       	cpc	r27, r26
 4ae:	20 f0       	brcs	.+8      	; 0x4b8 <__divsf3_pse+0xae>
 4b0:	62 1b       	sub	r22, r18
 4b2:	73 0b       	sbc	r23, r19
 4b4:	84 0b       	sbc	r24, r20
 4b6:	ba 0b       	sbc	r27, r26
 4b8:	ee 1f       	adc	r30, r30
 4ba:	88 f7       	brcc	.-30     	; 0x49e <__divsf3_pse+0x94>
 4bc:	e0 95       	com	r30
 4be:	08 95       	ret

000004c0 <__fixsfsi>:
 4c0:	0e 94 67 02 	call	0x4ce	; 0x4ce <__fixunssfsi>
 4c4:	68 94       	set
 4c6:	b1 11       	cpse	r27, r1
 4c8:	0c 94 42 03 	jmp	0x684	; 0x684 <__fp_szero>
 4cc:	08 95       	ret

000004ce <__fixunssfsi>:
 4ce:	0e 94 27 03 	call	0x64e	; 0x64e <__fp_splitA>
 4d2:	88 f0       	brcs	.+34     	; 0x4f6 <__fixunssfsi+0x28>
 4d4:	9f 57       	subi	r25, 0x7F	; 127
 4d6:	98 f0       	brcs	.+38     	; 0x4fe <__fixunssfsi+0x30>
 4d8:	b9 2f       	mov	r27, r25
 4da:	99 27       	eor	r25, r25
 4dc:	b7 51       	subi	r27, 0x17	; 23
 4de:	b0 f0       	brcs	.+44     	; 0x50c <__fixunssfsi+0x3e>
 4e0:	e1 f0       	breq	.+56     	; 0x51a <__fixunssfsi+0x4c>
 4e2:	66 0f       	add	r22, r22
 4e4:	77 1f       	adc	r23, r23
 4e6:	88 1f       	adc	r24, r24
 4e8:	99 1f       	adc	r25, r25
 4ea:	1a f0       	brmi	.+6      	; 0x4f2 <__fixunssfsi+0x24>
 4ec:	ba 95       	dec	r27
 4ee:	c9 f7       	brne	.-14     	; 0x4e2 <__fixunssfsi+0x14>
 4f0:	14 c0       	rjmp	.+40     	; 0x51a <__fixunssfsi+0x4c>
 4f2:	b1 30       	cpi	r27, 0x01	; 1
 4f4:	91 f0       	breq	.+36     	; 0x51a <__fixunssfsi+0x4c>
 4f6:	0e 94 41 03 	call	0x682	; 0x682 <__fp_zero>
 4fa:	b1 e0       	ldi	r27, 0x01	; 1
 4fc:	08 95       	ret
 4fe:	0c 94 41 03 	jmp	0x682	; 0x682 <__fp_zero>
 502:	67 2f       	mov	r22, r23
 504:	78 2f       	mov	r23, r24
 506:	88 27       	eor	r24, r24
 508:	b8 5f       	subi	r27, 0xF8	; 248
 50a:	39 f0       	breq	.+14     	; 0x51a <__fixunssfsi+0x4c>
 50c:	b9 3f       	cpi	r27, 0xF9	; 249
 50e:	cc f3       	brlt	.-14     	; 0x502 <__fixunssfsi+0x34>
 510:	86 95       	lsr	r24
 512:	77 95       	ror	r23
 514:	67 95       	ror	r22
 516:	b3 95       	inc	r27
 518:	d9 f7       	brne	.-10     	; 0x510 <__fixunssfsi+0x42>
 51a:	3e f4       	brtc	.+14     	; 0x52a <__fixunssfsi+0x5c>
 51c:	90 95       	com	r25
 51e:	80 95       	com	r24
 520:	70 95       	com	r23
 522:	61 95       	neg	r22
 524:	7f 4f       	sbci	r23, 0xFF	; 255
 526:	8f 4f       	sbci	r24, 0xFF	; 255
 528:	9f 4f       	sbci	r25, 0xFF	; 255
 52a:	08 95       	ret

0000052c <__floatunsisf>:
 52c:	e8 94       	clt
 52e:	09 c0       	rjmp	.+18     	; 0x542 <__floatsisf+0x12>

00000530 <__floatsisf>:
 530:	97 fb       	bst	r25, 7
 532:	3e f4       	brtc	.+14     	; 0x542 <__floatsisf+0x12>
 534:	90 95       	com	r25
 536:	80 95       	com	r24
 538:	70 95       	com	r23
 53a:	61 95       	neg	r22
 53c:	7f 4f       	sbci	r23, 0xFF	; 255
 53e:	8f 4f       	sbci	r24, 0xFF	; 255
 540:	9f 4f       	sbci	r25, 0xFF	; 255
 542:	99 23       	and	r25, r25
 544:	a9 f0       	breq	.+42     	; 0x570 <__floatsisf+0x40>
 546:	f9 2f       	mov	r31, r25
 548:	96 e9       	ldi	r25, 0x96	; 150
 54a:	bb 27       	eor	r27, r27
 54c:	93 95       	inc	r25
 54e:	f6 95       	lsr	r31
 550:	87 95       	ror	r24
 552:	77 95       	ror	r23
 554:	67 95       	ror	r22
 556:	b7 95       	ror	r27
 558:	f1 11       	cpse	r31, r1
 55a:	f8 cf       	rjmp	.-16     	; 0x54c <__floatsisf+0x1c>
 55c:	fa f4       	brpl	.+62     	; 0x59c <__floatsisf+0x6c>
 55e:	bb 0f       	add	r27, r27
 560:	11 f4       	brne	.+4      	; 0x566 <__floatsisf+0x36>
 562:	60 ff       	sbrs	r22, 0
 564:	1b c0       	rjmp	.+54     	; 0x59c <__floatsisf+0x6c>
 566:	6f 5f       	subi	r22, 0xFF	; 255
 568:	7f 4f       	sbci	r23, 0xFF	; 255
 56a:	8f 4f       	sbci	r24, 0xFF	; 255
 56c:	9f 4f       	sbci	r25, 0xFF	; 255
 56e:	16 c0       	rjmp	.+44     	; 0x59c <__floatsisf+0x6c>
 570:	88 23       	and	r24, r24
 572:	11 f0       	breq	.+4      	; 0x578 <__floatsisf+0x48>
 574:	96 e9       	ldi	r25, 0x96	; 150
 576:	11 c0       	rjmp	.+34     	; 0x59a <__floatsisf+0x6a>
 578:	77 23       	and	r23, r23
 57a:	21 f0       	breq	.+8      	; 0x584 <__floatsisf+0x54>
 57c:	9e e8       	ldi	r25, 0x8E	; 142
 57e:	87 2f       	mov	r24, r23
 580:	76 2f       	mov	r23, r22
 582:	05 c0       	rjmp	.+10     	; 0x58e <__floatsisf+0x5e>
 584:	66 23       	and	r22, r22
 586:	71 f0       	breq	.+28     	; 0x5a4 <__floatsisf+0x74>
 588:	96 e8       	ldi	r25, 0x86	; 134
 58a:	86 2f       	mov	r24, r22
 58c:	70 e0       	ldi	r23, 0x00	; 0
 58e:	60 e0       	ldi	r22, 0x00	; 0
 590:	2a f0       	brmi	.+10     	; 0x59c <__floatsisf+0x6c>
 592:	9a 95       	dec	r25
 594:	66 0f       	add	r22, r22
 596:	77 1f       	adc	r23, r23
 598:	88 1f       	adc	r24, r24
 59a:	da f7       	brpl	.-10     	; 0x592 <__floatsisf+0x62>
 59c:	88 0f       	add	r24, r24
 59e:	96 95       	lsr	r25
 5a0:	87 95       	ror	r24
 5a2:	97 f9       	bld	r25, 7
 5a4:	08 95       	ret

000005a6 <__fp_cmp>:
 5a6:	99 0f       	add	r25, r25
 5a8:	00 08       	sbc	r0, r0
 5aa:	55 0f       	add	r21, r21
 5ac:	aa 0b       	sbc	r26, r26
 5ae:	e0 e8       	ldi	r30, 0x80	; 128
 5b0:	fe ef       	ldi	r31, 0xFE	; 254
 5b2:	16 16       	cp	r1, r22
 5b4:	17 06       	cpc	r1, r23
 5b6:	e8 07       	cpc	r30, r24
 5b8:	f9 07       	cpc	r31, r25
 5ba:	c0 f0       	brcs	.+48     	; 0x5ec <__fp_cmp+0x46>
 5bc:	12 16       	cp	r1, r18
 5be:	13 06       	cpc	r1, r19
 5c0:	e4 07       	cpc	r30, r20
 5c2:	f5 07       	cpc	r31, r21
 5c4:	98 f0       	brcs	.+38     	; 0x5ec <__fp_cmp+0x46>
 5c6:	62 1b       	sub	r22, r18
 5c8:	73 0b       	sbc	r23, r19
 5ca:	84 0b       	sbc	r24, r20
 5cc:	95 0b       	sbc	r25, r21
 5ce:	39 f4       	brne	.+14     	; 0x5de <__fp_cmp+0x38>
 5d0:	0a 26       	eor	r0, r26
 5d2:	61 f0       	breq	.+24     	; 0x5ec <__fp_cmp+0x46>
 5d4:	23 2b       	or	r18, r19
 5d6:	24 2b       	or	r18, r20
 5d8:	25 2b       	or	r18, r21
 5da:	21 f4       	brne	.+8      	; 0x5e4 <__fp_cmp+0x3e>
 5dc:	08 95       	ret
 5de:	0a 26       	eor	r0, r26
 5e0:	09 f4       	brne	.+2      	; 0x5e4 <__fp_cmp+0x3e>
 5e2:	a1 40       	sbci	r26, 0x01	; 1
 5e4:	a6 95       	lsr	r26
 5e6:	8f ef       	ldi	r24, 0xFF	; 255
 5e8:	81 1d       	adc	r24, r1
 5ea:	81 1d       	adc	r24, r1
 5ec:	08 95       	ret

000005ee <__fp_inf>:
 5ee:	97 f9       	bld	r25, 7
 5f0:	9f 67       	ori	r25, 0x7F	; 127
 5f2:	80 e8       	ldi	r24, 0x80	; 128
 5f4:	70 e0       	ldi	r23, 0x00	; 0
 5f6:	60 e0       	ldi	r22, 0x00	; 0
 5f8:	08 95       	ret

000005fa <__fp_nan>:
 5fa:	9f ef       	ldi	r25, 0xFF	; 255
 5fc:	80 ec       	ldi	r24, 0xC0	; 192
 5fe:	08 95       	ret

00000600 <__fp_pscA>:
 600:	00 24       	eor	r0, r0
 602:	0a 94       	dec	r0
 604:	16 16       	cp	r1, r22
 606:	17 06       	cpc	r1, r23
 608:	18 06       	cpc	r1, r24
 60a:	09 06       	cpc	r0, r25
 60c:	08 95       	ret

0000060e <__fp_pscB>:
 60e:	00 24       	eor	r0, r0
 610:	0a 94       	dec	r0
 612:	12 16       	cp	r1, r18
 614:	13 06       	cpc	r1, r19
 616:	14 06       	cpc	r1, r20
 618:	05 06       	cpc	r0, r21
 61a:	08 95       	ret

0000061c <__fp_round>:
 61c:	09 2e       	mov	r0, r25
 61e:	03 94       	inc	r0
 620:	00 0c       	add	r0, r0
 622:	11 f4       	brne	.+4      	; 0x628 <__fp_round+0xc>
 624:	88 23       	and	r24, r24
 626:	52 f0       	brmi	.+20     	; 0x63c <__fp_round+0x20>
 628:	bb 0f       	add	r27, r27
 62a:	40 f4       	brcc	.+16     	; 0x63c <__fp_round+0x20>
 62c:	bf 2b       	or	r27, r31
 62e:	11 f4       	brne	.+4      	; 0x634 <__fp_round+0x18>
 630:	60 ff       	sbrs	r22, 0
 632:	04 c0       	rjmp	.+8      	; 0x63c <__fp_round+0x20>
 634:	6f 5f       	subi	r22, 0xFF	; 255
 636:	7f 4f       	sbci	r23, 0xFF	; 255
 638:	8f 4f       	sbci	r24, 0xFF	; 255
 63a:	9f 4f       	sbci	r25, 0xFF	; 255
 63c:	08 95       	ret

0000063e <__fp_split3>:
 63e:	57 fd       	sbrc	r21, 7
 640:	90 58       	subi	r25, 0x80	; 128
 642:	44 0f       	add	r20, r20
 644:	55 1f       	adc	r21, r21
 646:	59 f0       	breq	.+22     	; 0x65e <__fp_splitA+0x10>
 648:	5f 3f       	cpi	r21, 0xFF	; 255
 64a:	71 f0       	breq	.+28     	; 0x668 <__fp_splitA+0x1a>
 64c:	47 95       	ror	r20

0000064e <__fp_splitA>:
 64e:	88 0f       	add	r24, r24
 650:	97 fb       	bst	r25, 7
 652:	99 1f       	adc	r25, r25
 654:	61 f0       	breq	.+24     	; 0x66e <__fp_splitA+0x20>
 656:	9f 3f       	cpi	r25, 0xFF	; 255
 658:	79 f0       	breq	.+30     	; 0x678 <__fp_splitA+0x2a>
 65a:	87 95       	ror	r24
 65c:	08 95       	ret
 65e:	12 16       	cp	r1, r18
 660:	13 06       	cpc	r1, r19
 662:	14 06       	cpc	r1, r20
 664:	55 1f       	adc	r21, r21
 666:	f2 cf       	rjmp	.-28     	; 0x64c <__fp_split3+0xe>
 668:	46 95       	lsr	r20
 66a:	f1 df       	rcall	.-30     	; 0x64e <__fp_splitA>
 66c:	08 c0       	rjmp	.+16     	; 0x67e <__fp_splitA+0x30>
 66e:	16 16       	cp	r1, r22
 670:	17 06       	cpc	r1, r23
 672:	18 06       	cpc	r1, r24
 674:	99 1f       	adc	r25, r25
 676:	f1 cf       	rjmp	.-30     	; 0x65a <__fp_splitA+0xc>
 678:	86 95       	lsr	r24
 67a:	71 05       	cpc	r23, r1
 67c:	61 05       	cpc	r22, r1
 67e:	08 94       	sec
 680:	08 95       	ret

00000682 <__fp_zero>:
 682:	e8 94       	clt

00000684 <__fp_szero>:
 684:	bb 27       	eor	r27, r27
 686:	66 27       	eor	r22, r22
 688:	77 27       	eor	r23, r23
 68a:	cb 01       	movw	r24, r22
 68c:	97 f9       	bld	r25, 7
 68e:	08 95       	ret

00000690 <__gesf2>:
 690:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <__fp_cmp>
 694:	08 f4       	brcc	.+2      	; 0x698 <__gesf2+0x8>
 696:	8f ef       	ldi	r24, 0xFF	; 255
 698:	08 95       	ret

0000069a <__mulsf3>:
 69a:	0e 94 60 03 	call	0x6c0	; 0x6c0 <__mulsf3x>
 69e:	0c 94 0e 03 	jmp	0x61c	; 0x61c <__fp_round>
 6a2:	0e 94 00 03 	call	0x600	; 0x600 <__fp_pscA>
 6a6:	38 f0       	brcs	.+14     	; 0x6b6 <__mulsf3+0x1c>
 6a8:	0e 94 07 03 	call	0x60e	; 0x60e <__fp_pscB>
 6ac:	20 f0       	brcs	.+8      	; 0x6b6 <__mulsf3+0x1c>
 6ae:	95 23       	and	r25, r21
 6b0:	11 f0       	breq	.+4      	; 0x6b6 <__mulsf3+0x1c>
 6b2:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__fp_inf>
 6b6:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__fp_nan>
 6ba:	11 24       	eor	r1, r1
 6bc:	0c 94 42 03 	jmp	0x684	; 0x684 <__fp_szero>

000006c0 <__mulsf3x>:
 6c0:	0e 94 1f 03 	call	0x63e	; 0x63e <__fp_split3>
 6c4:	70 f3       	brcs	.-36     	; 0x6a2 <__mulsf3+0x8>

000006c6 <__mulsf3_pse>:
 6c6:	95 9f       	mul	r25, r21
 6c8:	c1 f3       	breq	.-16     	; 0x6ba <__mulsf3+0x20>
 6ca:	95 0f       	add	r25, r21
 6cc:	50 e0       	ldi	r21, 0x00	; 0
 6ce:	55 1f       	adc	r21, r21
 6d0:	62 9f       	mul	r22, r18
 6d2:	f0 01       	movw	r30, r0
 6d4:	72 9f       	mul	r23, r18
 6d6:	bb 27       	eor	r27, r27
 6d8:	f0 0d       	add	r31, r0
 6da:	b1 1d       	adc	r27, r1
 6dc:	63 9f       	mul	r22, r19
 6de:	aa 27       	eor	r26, r26
 6e0:	f0 0d       	add	r31, r0
 6e2:	b1 1d       	adc	r27, r1
 6e4:	aa 1f       	adc	r26, r26
 6e6:	64 9f       	mul	r22, r20
 6e8:	66 27       	eor	r22, r22
 6ea:	b0 0d       	add	r27, r0
 6ec:	a1 1d       	adc	r26, r1
 6ee:	66 1f       	adc	r22, r22
 6f0:	82 9f       	mul	r24, r18
 6f2:	22 27       	eor	r18, r18
 6f4:	b0 0d       	add	r27, r0
 6f6:	a1 1d       	adc	r26, r1
 6f8:	62 1f       	adc	r22, r18
 6fa:	73 9f       	mul	r23, r19
 6fc:	b0 0d       	add	r27, r0
 6fe:	a1 1d       	adc	r26, r1
 700:	62 1f       	adc	r22, r18
 702:	83 9f       	mul	r24, r19
 704:	a0 0d       	add	r26, r0
 706:	61 1d       	adc	r22, r1
 708:	22 1f       	adc	r18, r18
 70a:	74 9f       	mul	r23, r20
 70c:	33 27       	eor	r19, r19
 70e:	a0 0d       	add	r26, r0
 710:	61 1d       	adc	r22, r1
 712:	23 1f       	adc	r18, r19
 714:	84 9f       	mul	r24, r20
 716:	60 0d       	add	r22, r0
 718:	21 1d       	adc	r18, r1
 71a:	82 2f       	mov	r24, r18
 71c:	76 2f       	mov	r23, r22
 71e:	6a 2f       	mov	r22, r26
 720:	11 24       	eor	r1, r1
 722:	9f 57       	subi	r25, 0x7F	; 127
 724:	50 40       	sbci	r21, 0x00	; 0
 726:	9a f0       	brmi	.+38     	; 0x74e <__mulsf3_pse+0x88>
 728:	f1 f0       	breq	.+60     	; 0x766 <__mulsf3_pse+0xa0>
 72a:	88 23       	and	r24, r24
 72c:	4a f0       	brmi	.+18     	; 0x740 <__mulsf3_pse+0x7a>
 72e:	ee 0f       	add	r30, r30
 730:	ff 1f       	adc	r31, r31
 732:	bb 1f       	adc	r27, r27
 734:	66 1f       	adc	r22, r22
 736:	77 1f       	adc	r23, r23
 738:	88 1f       	adc	r24, r24
 73a:	91 50       	subi	r25, 0x01	; 1
 73c:	50 40       	sbci	r21, 0x00	; 0
 73e:	a9 f7       	brne	.-22     	; 0x72a <__mulsf3_pse+0x64>
 740:	9e 3f       	cpi	r25, 0xFE	; 254
 742:	51 05       	cpc	r21, r1
 744:	80 f0       	brcs	.+32     	; 0x766 <__mulsf3_pse+0xa0>
 746:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__fp_inf>
 74a:	0c 94 42 03 	jmp	0x684	; 0x684 <__fp_szero>
 74e:	5f 3f       	cpi	r21, 0xFF	; 255
 750:	e4 f3       	brlt	.-8      	; 0x74a <__mulsf3_pse+0x84>
 752:	98 3e       	cpi	r25, 0xE8	; 232
 754:	d4 f3       	brlt	.-12     	; 0x74a <__mulsf3_pse+0x84>
 756:	86 95       	lsr	r24
 758:	77 95       	ror	r23
 75a:	67 95       	ror	r22
 75c:	b7 95       	ror	r27
 75e:	f7 95       	ror	r31
 760:	e7 95       	ror	r30
 762:	9f 5f       	subi	r25, 0xFF	; 255
 764:	c1 f7       	brne	.-16     	; 0x756 <__mulsf3_pse+0x90>
 766:	fe 2b       	or	r31, r30
 768:	88 0f       	add	r24, r24
 76a:	91 1d       	adc	r25, r1
 76c:	96 95       	lsr	r25
 76e:	87 95       	ror	r24
 770:	97 f9       	bld	r25, 7
 772:	08 95       	ret

00000774 <sprintf>:
 774:	ae e0       	ldi	r26, 0x0E	; 14
 776:	b0 e0       	ldi	r27, 0x00	; 0
 778:	e0 ec       	ldi	r30, 0xC0	; 192
 77a:	f3 e0       	ldi	r31, 0x03	; 3
 77c:	0c 94 7b 06 	jmp	0xcf6	; 0xcf6 <__prologue_saves__+0x1c>
 780:	0d 89       	ldd	r16, Y+21	; 0x15
 782:	1e 89       	ldd	r17, Y+22	; 0x16
 784:	86 e0       	ldi	r24, 0x06	; 6
 786:	8c 83       	std	Y+4, r24	; 0x04
 788:	1a 83       	std	Y+2, r17	; 0x02
 78a:	09 83       	std	Y+1, r16	; 0x01
 78c:	8f ef       	ldi	r24, 0xFF	; 255
 78e:	9f e7       	ldi	r25, 0x7F	; 127
 790:	9e 83       	std	Y+6, r25	; 0x06
 792:	8d 83       	std	Y+5, r24	; 0x05
 794:	ae 01       	movw	r20, r28
 796:	47 5e       	subi	r20, 0xE7	; 231
 798:	5f 4f       	sbci	r21, 0xFF	; 255
 79a:	6f 89       	ldd	r22, Y+23	; 0x17
 79c:	78 8d       	ldd	r23, Y+24	; 0x18
 79e:	ce 01       	movw	r24, r28
 7a0:	01 96       	adiw	r24, 0x01	; 1
 7a2:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <vfprintf>
 7a6:	ef 81       	ldd	r30, Y+7	; 0x07
 7a8:	f8 85       	ldd	r31, Y+8	; 0x08
 7aa:	e0 0f       	add	r30, r16
 7ac:	f1 1f       	adc	r31, r17
 7ae:	10 82       	st	Z, r1
 7b0:	2e 96       	adiw	r28, 0x0e	; 14
 7b2:	e4 e0       	ldi	r30, 0x04	; 4
 7b4:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__epilogue_restores__+0x1c>

000007b8 <vfprintf>:
 7b8:	ab e0       	ldi	r26, 0x0B	; 11
 7ba:	b0 e0       	ldi	r27, 0x00	; 0
 7bc:	e2 ee       	ldi	r30, 0xE2	; 226
 7be:	f3 e0       	ldi	r31, 0x03	; 3
 7c0:	0c 94 6d 06 	jmp	0xcda	; 0xcda <__prologue_saves__>
 7c4:	6c 01       	movw	r12, r24
 7c6:	7b 01       	movw	r14, r22
 7c8:	8a 01       	movw	r16, r20
 7ca:	fc 01       	movw	r30, r24
 7cc:	17 82       	std	Z+7, r1	; 0x07
 7ce:	16 82       	std	Z+6, r1	; 0x06
 7d0:	83 81       	ldd	r24, Z+3	; 0x03
 7d2:	81 ff       	sbrs	r24, 1
 7d4:	cc c1       	rjmp	.+920    	; 0xb6e <__stack+0x30f>
 7d6:	ce 01       	movw	r24, r28
 7d8:	01 96       	adiw	r24, 0x01	; 1
 7da:	3c 01       	movw	r6, r24
 7dc:	f6 01       	movw	r30, r12
 7de:	93 81       	ldd	r25, Z+3	; 0x03
 7e0:	f7 01       	movw	r30, r14
 7e2:	93 fd       	sbrc	r25, 3
 7e4:	85 91       	lpm	r24, Z+
 7e6:	93 ff       	sbrs	r25, 3
 7e8:	81 91       	ld	r24, Z+
 7ea:	7f 01       	movw	r14, r30
 7ec:	88 23       	and	r24, r24
 7ee:	09 f4       	brne	.+2      	; 0x7f2 <vfprintf+0x3a>
 7f0:	ba c1       	rjmp	.+884    	; 0xb66 <__stack+0x307>
 7f2:	85 32       	cpi	r24, 0x25	; 37
 7f4:	39 f4       	brne	.+14     	; 0x804 <vfprintf+0x4c>
 7f6:	93 fd       	sbrc	r25, 3
 7f8:	85 91       	lpm	r24, Z+
 7fa:	93 ff       	sbrs	r25, 3
 7fc:	81 91       	ld	r24, Z+
 7fe:	7f 01       	movw	r14, r30
 800:	85 32       	cpi	r24, 0x25	; 37
 802:	29 f4       	brne	.+10     	; 0x80e <vfprintf+0x56>
 804:	b6 01       	movw	r22, r12
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	0e 94 d3 05 	call	0xba6	; 0xba6 <fputc>
 80c:	e7 cf       	rjmp	.-50     	; 0x7dc <vfprintf+0x24>
 80e:	91 2c       	mov	r9, r1
 810:	21 2c       	mov	r2, r1
 812:	31 2c       	mov	r3, r1
 814:	ff e1       	ldi	r31, 0x1F	; 31
 816:	f3 15       	cp	r31, r3
 818:	d8 f0       	brcs	.+54     	; 0x850 <vfprintf+0x98>
 81a:	8b 32       	cpi	r24, 0x2B	; 43
 81c:	79 f0       	breq	.+30     	; 0x83c <vfprintf+0x84>
 81e:	38 f4       	brcc	.+14     	; 0x82e <vfprintf+0x76>
 820:	80 32       	cpi	r24, 0x20	; 32
 822:	79 f0       	breq	.+30     	; 0x842 <vfprintf+0x8a>
 824:	83 32       	cpi	r24, 0x23	; 35
 826:	a1 f4       	brne	.+40     	; 0x850 <vfprintf+0x98>
 828:	23 2d       	mov	r18, r3
 82a:	20 61       	ori	r18, 0x10	; 16
 82c:	1d c0       	rjmp	.+58     	; 0x868 <__stack+0x9>
 82e:	8d 32       	cpi	r24, 0x2D	; 45
 830:	61 f0       	breq	.+24     	; 0x84a <vfprintf+0x92>
 832:	80 33       	cpi	r24, 0x30	; 48
 834:	69 f4       	brne	.+26     	; 0x850 <vfprintf+0x98>
 836:	23 2d       	mov	r18, r3
 838:	21 60       	ori	r18, 0x01	; 1
 83a:	16 c0       	rjmp	.+44     	; 0x868 <__stack+0x9>
 83c:	83 2d       	mov	r24, r3
 83e:	82 60       	ori	r24, 0x02	; 2
 840:	38 2e       	mov	r3, r24
 842:	e3 2d       	mov	r30, r3
 844:	e4 60       	ori	r30, 0x04	; 4
 846:	3e 2e       	mov	r3, r30
 848:	2a c0       	rjmp	.+84     	; 0x89e <__stack+0x3f>
 84a:	f3 2d       	mov	r31, r3
 84c:	f8 60       	ori	r31, 0x08	; 8
 84e:	1d c0       	rjmp	.+58     	; 0x88a <__stack+0x2b>
 850:	37 fc       	sbrc	r3, 7
 852:	2d c0       	rjmp	.+90     	; 0x8ae <__stack+0x4f>
 854:	20 ed       	ldi	r18, 0xD0	; 208
 856:	28 0f       	add	r18, r24
 858:	2a 30       	cpi	r18, 0x0A	; 10
 85a:	40 f0       	brcs	.+16     	; 0x86c <__stack+0xd>
 85c:	8e 32       	cpi	r24, 0x2E	; 46
 85e:	b9 f4       	brne	.+46     	; 0x88e <__stack+0x2f>
 860:	36 fc       	sbrc	r3, 6
 862:	81 c1       	rjmp	.+770    	; 0xb66 <__stack+0x307>
 864:	23 2d       	mov	r18, r3
 866:	20 64       	ori	r18, 0x40	; 64
 868:	32 2e       	mov	r3, r18
 86a:	19 c0       	rjmp	.+50     	; 0x89e <__stack+0x3f>
 86c:	36 fe       	sbrs	r3, 6
 86e:	06 c0       	rjmp	.+12     	; 0x87c <__stack+0x1d>
 870:	8a e0       	ldi	r24, 0x0A	; 10
 872:	98 9e       	mul	r9, r24
 874:	20 0d       	add	r18, r0
 876:	11 24       	eor	r1, r1
 878:	92 2e       	mov	r9, r18
 87a:	11 c0       	rjmp	.+34     	; 0x89e <__stack+0x3f>
 87c:	ea e0       	ldi	r30, 0x0A	; 10
 87e:	2e 9e       	mul	r2, r30
 880:	20 0d       	add	r18, r0
 882:	11 24       	eor	r1, r1
 884:	22 2e       	mov	r2, r18
 886:	f3 2d       	mov	r31, r3
 888:	f0 62       	ori	r31, 0x20	; 32
 88a:	3f 2e       	mov	r3, r31
 88c:	08 c0       	rjmp	.+16     	; 0x89e <__stack+0x3f>
 88e:	8c 36       	cpi	r24, 0x6C	; 108
 890:	21 f4       	brne	.+8      	; 0x89a <__stack+0x3b>
 892:	83 2d       	mov	r24, r3
 894:	80 68       	ori	r24, 0x80	; 128
 896:	38 2e       	mov	r3, r24
 898:	02 c0       	rjmp	.+4      	; 0x89e <__stack+0x3f>
 89a:	88 36       	cpi	r24, 0x68	; 104
 89c:	41 f4       	brne	.+16     	; 0x8ae <__stack+0x4f>
 89e:	f7 01       	movw	r30, r14
 8a0:	93 fd       	sbrc	r25, 3
 8a2:	85 91       	lpm	r24, Z+
 8a4:	93 ff       	sbrs	r25, 3
 8a6:	81 91       	ld	r24, Z+
 8a8:	7f 01       	movw	r14, r30
 8aa:	81 11       	cpse	r24, r1
 8ac:	b3 cf       	rjmp	.-154    	; 0x814 <vfprintf+0x5c>
 8ae:	98 2f       	mov	r25, r24
 8b0:	9f 7d       	andi	r25, 0xDF	; 223
 8b2:	95 54       	subi	r25, 0x45	; 69
 8b4:	93 30       	cpi	r25, 0x03	; 3
 8b6:	28 f4       	brcc	.+10     	; 0x8c2 <__stack+0x63>
 8b8:	0c 5f       	subi	r16, 0xFC	; 252
 8ba:	1f 4f       	sbci	r17, 0xFF	; 255
 8bc:	9f e3       	ldi	r25, 0x3F	; 63
 8be:	99 83       	std	Y+1, r25	; 0x01
 8c0:	0d c0       	rjmp	.+26     	; 0x8dc <__stack+0x7d>
 8c2:	83 36       	cpi	r24, 0x63	; 99
 8c4:	31 f0       	breq	.+12     	; 0x8d2 <__stack+0x73>
 8c6:	83 37       	cpi	r24, 0x73	; 115
 8c8:	71 f0       	breq	.+28     	; 0x8e6 <__stack+0x87>
 8ca:	83 35       	cpi	r24, 0x53	; 83
 8cc:	09 f0       	breq	.+2      	; 0x8d0 <__stack+0x71>
 8ce:	59 c0       	rjmp	.+178    	; 0x982 <__stack+0x123>
 8d0:	21 c0       	rjmp	.+66     	; 0x914 <__stack+0xb5>
 8d2:	f8 01       	movw	r30, r16
 8d4:	80 81       	ld	r24, Z
 8d6:	89 83       	std	Y+1, r24	; 0x01
 8d8:	0e 5f       	subi	r16, 0xFE	; 254
 8da:	1f 4f       	sbci	r17, 0xFF	; 255
 8dc:	88 24       	eor	r8, r8
 8de:	83 94       	inc	r8
 8e0:	91 2c       	mov	r9, r1
 8e2:	53 01       	movw	r10, r6
 8e4:	13 c0       	rjmp	.+38     	; 0x90c <__stack+0xad>
 8e6:	28 01       	movw	r4, r16
 8e8:	f2 e0       	ldi	r31, 0x02	; 2
 8ea:	4f 0e       	add	r4, r31
 8ec:	51 1c       	adc	r5, r1
 8ee:	f8 01       	movw	r30, r16
 8f0:	a0 80       	ld	r10, Z
 8f2:	b1 80       	ldd	r11, Z+1	; 0x01
 8f4:	36 fe       	sbrs	r3, 6
 8f6:	03 c0       	rjmp	.+6      	; 0x8fe <__stack+0x9f>
 8f8:	69 2d       	mov	r22, r9
 8fa:	70 e0       	ldi	r23, 0x00	; 0
 8fc:	02 c0       	rjmp	.+4      	; 0x902 <__stack+0xa3>
 8fe:	6f ef       	ldi	r22, 0xFF	; 255
 900:	7f ef       	ldi	r23, 0xFF	; 255
 902:	c5 01       	movw	r24, r10
 904:	0e 94 c8 05 	call	0xb90	; 0xb90 <strnlen>
 908:	4c 01       	movw	r8, r24
 90a:	82 01       	movw	r16, r4
 90c:	f3 2d       	mov	r31, r3
 90e:	ff 77       	andi	r31, 0x7F	; 127
 910:	3f 2e       	mov	r3, r31
 912:	16 c0       	rjmp	.+44     	; 0x940 <__stack+0xe1>
 914:	28 01       	movw	r4, r16
 916:	22 e0       	ldi	r18, 0x02	; 2
 918:	42 0e       	add	r4, r18
 91a:	51 1c       	adc	r5, r1
 91c:	f8 01       	movw	r30, r16
 91e:	a0 80       	ld	r10, Z
 920:	b1 80       	ldd	r11, Z+1	; 0x01
 922:	36 fe       	sbrs	r3, 6
 924:	03 c0       	rjmp	.+6      	; 0x92c <__stack+0xcd>
 926:	69 2d       	mov	r22, r9
 928:	70 e0       	ldi	r23, 0x00	; 0
 92a:	02 c0       	rjmp	.+4      	; 0x930 <__stack+0xd1>
 92c:	6f ef       	ldi	r22, 0xFF	; 255
 92e:	7f ef       	ldi	r23, 0xFF	; 255
 930:	c5 01       	movw	r24, r10
 932:	0e 94 bd 05 	call	0xb7a	; 0xb7a <strnlen_P>
 936:	4c 01       	movw	r8, r24
 938:	f3 2d       	mov	r31, r3
 93a:	f0 68       	ori	r31, 0x80	; 128
 93c:	3f 2e       	mov	r3, r31
 93e:	82 01       	movw	r16, r4
 940:	33 fc       	sbrc	r3, 3
 942:	1b c0       	rjmp	.+54     	; 0x97a <__stack+0x11b>
 944:	82 2d       	mov	r24, r2
 946:	90 e0       	ldi	r25, 0x00	; 0
 948:	88 16       	cp	r8, r24
 94a:	99 06       	cpc	r9, r25
 94c:	b0 f4       	brcc	.+44     	; 0x97a <__stack+0x11b>
 94e:	b6 01       	movw	r22, r12
 950:	80 e2       	ldi	r24, 0x20	; 32
 952:	90 e0       	ldi	r25, 0x00	; 0
 954:	0e 94 d3 05 	call	0xba6	; 0xba6 <fputc>
 958:	2a 94       	dec	r2
 95a:	f4 cf       	rjmp	.-24     	; 0x944 <__stack+0xe5>
 95c:	f5 01       	movw	r30, r10
 95e:	37 fc       	sbrc	r3, 7
 960:	85 91       	lpm	r24, Z+
 962:	37 fe       	sbrs	r3, 7
 964:	81 91       	ld	r24, Z+
 966:	5f 01       	movw	r10, r30
 968:	b6 01       	movw	r22, r12
 96a:	90 e0       	ldi	r25, 0x00	; 0
 96c:	0e 94 d3 05 	call	0xba6	; 0xba6 <fputc>
 970:	21 10       	cpse	r2, r1
 972:	2a 94       	dec	r2
 974:	21 e0       	ldi	r18, 0x01	; 1
 976:	82 1a       	sub	r8, r18
 978:	91 08       	sbc	r9, r1
 97a:	81 14       	cp	r8, r1
 97c:	91 04       	cpc	r9, r1
 97e:	71 f7       	brne	.-36     	; 0x95c <__stack+0xfd>
 980:	e8 c0       	rjmp	.+464    	; 0xb52 <__stack+0x2f3>
 982:	84 36       	cpi	r24, 0x64	; 100
 984:	11 f0       	breq	.+4      	; 0x98a <__stack+0x12b>
 986:	89 36       	cpi	r24, 0x69	; 105
 988:	41 f5       	brne	.+80     	; 0x9da <__stack+0x17b>
 98a:	f8 01       	movw	r30, r16
 98c:	37 fe       	sbrs	r3, 7
 98e:	07 c0       	rjmp	.+14     	; 0x99e <__stack+0x13f>
 990:	60 81       	ld	r22, Z
 992:	71 81       	ldd	r23, Z+1	; 0x01
 994:	82 81       	ldd	r24, Z+2	; 0x02
 996:	93 81       	ldd	r25, Z+3	; 0x03
 998:	0c 5f       	subi	r16, 0xFC	; 252
 99a:	1f 4f       	sbci	r17, 0xFF	; 255
 99c:	08 c0       	rjmp	.+16     	; 0x9ae <__stack+0x14f>
 99e:	60 81       	ld	r22, Z
 9a0:	71 81       	ldd	r23, Z+1	; 0x01
 9a2:	07 2e       	mov	r0, r23
 9a4:	00 0c       	add	r0, r0
 9a6:	88 0b       	sbc	r24, r24
 9a8:	99 0b       	sbc	r25, r25
 9aa:	0e 5f       	subi	r16, 0xFE	; 254
 9ac:	1f 4f       	sbci	r17, 0xFF	; 255
 9ae:	f3 2d       	mov	r31, r3
 9b0:	ff 76       	andi	r31, 0x6F	; 111
 9b2:	3f 2e       	mov	r3, r31
 9b4:	97 ff       	sbrs	r25, 7
 9b6:	09 c0       	rjmp	.+18     	; 0x9ca <__stack+0x16b>
 9b8:	90 95       	com	r25
 9ba:	80 95       	com	r24
 9bc:	70 95       	com	r23
 9be:	61 95       	neg	r22
 9c0:	7f 4f       	sbci	r23, 0xFF	; 255
 9c2:	8f 4f       	sbci	r24, 0xFF	; 255
 9c4:	9f 4f       	sbci	r25, 0xFF	; 255
 9c6:	f0 68       	ori	r31, 0x80	; 128
 9c8:	3f 2e       	mov	r3, r31
 9ca:	2a e0       	ldi	r18, 0x0A	; 10
 9cc:	30 e0       	ldi	r19, 0x00	; 0
 9ce:	a3 01       	movw	r20, r6
 9d0:	0e 94 0f 06 	call	0xc1e	; 0xc1e <__ultoa_invert>
 9d4:	88 2e       	mov	r8, r24
 9d6:	86 18       	sub	r8, r6
 9d8:	45 c0       	rjmp	.+138    	; 0xa64 <__stack+0x205>
 9da:	85 37       	cpi	r24, 0x75	; 117
 9dc:	31 f4       	brne	.+12     	; 0x9ea <__stack+0x18b>
 9de:	23 2d       	mov	r18, r3
 9e0:	2f 7e       	andi	r18, 0xEF	; 239
 9e2:	b2 2e       	mov	r11, r18
 9e4:	2a e0       	ldi	r18, 0x0A	; 10
 9e6:	30 e0       	ldi	r19, 0x00	; 0
 9e8:	25 c0       	rjmp	.+74     	; 0xa34 <__stack+0x1d5>
 9ea:	93 2d       	mov	r25, r3
 9ec:	99 7f       	andi	r25, 0xF9	; 249
 9ee:	b9 2e       	mov	r11, r25
 9f0:	8f 36       	cpi	r24, 0x6F	; 111
 9f2:	c1 f0       	breq	.+48     	; 0xa24 <__stack+0x1c5>
 9f4:	18 f4       	brcc	.+6      	; 0x9fc <__stack+0x19d>
 9f6:	88 35       	cpi	r24, 0x58	; 88
 9f8:	79 f0       	breq	.+30     	; 0xa18 <__stack+0x1b9>
 9fa:	b5 c0       	rjmp	.+362    	; 0xb66 <__stack+0x307>
 9fc:	80 37       	cpi	r24, 0x70	; 112
 9fe:	19 f0       	breq	.+6      	; 0xa06 <__stack+0x1a7>
 a00:	88 37       	cpi	r24, 0x78	; 120
 a02:	21 f0       	breq	.+8      	; 0xa0c <__stack+0x1ad>
 a04:	b0 c0       	rjmp	.+352    	; 0xb66 <__stack+0x307>
 a06:	e9 2f       	mov	r30, r25
 a08:	e0 61       	ori	r30, 0x10	; 16
 a0a:	be 2e       	mov	r11, r30
 a0c:	b4 fe       	sbrs	r11, 4
 a0e:	0d c0       	rjmp	.+26     	; 0xa2a <__stack+0x1cb>
 a10:	fb 2d       	mov	r31, r11
 a12:	f4 60       	ori	r31, 0x04	; 4
 a14:	bf 2e       	mov	r11, r31
 a16:	09 c0       	rjmp	.+18     	; 0xa2a <__stack+0x1cb>
 a18:	34 fe       	sbrs	r3, 4
 a1a:	0a c0       	rjmp	.+20     	; 0xa30 <__stack+0x1d1>
 a1c:	29 2f       	mov	r18, r25
 a1e:	26 60       	ori	r18, 0x06	; 6
 a20:	b2 2e       	mov	r11, r18
 a22:	06 c0       	rjmp	.+12     	; 0xa30 <__stack+0x1d1>
 a24:	28 e0       	ldi	r18, 0x08	; 8
 a26:	30 e0       	ldi	r19, 0x00	; 0
 a28:	05 c0       	rjmp	.+10     	; 0xa34 <__stack+0x1d5>
 a2a:	20 e1       	ldi	r18, 0x10	; 16
 a2c:	30 e0       	ldi	r19, 0x00	; 0
 a2e:	02 c0       	rjmp	.+4      	; 0xa34 <__stack+0x1d5>
 a30:	20 e1       	ldi	r18, 0x10	; 16
 a32:	32 e0       	ldi	r19, 0x02	; 2
 a34:	f8 01       	movw	r30, r16
 a36:	b7 fe       	sbrs	r11, 7
 a38:	07 c0       	rjmp	.+14     	; 0xa48 <__stack+0x1e9>
 a3a:	60 81       	ld	r22, Z
 a3c:	71 81       	ldd	r23, Z+1	; 0x01
 a3e:	82 81       	ldd	r24, Z+2	; 0x02
 a40:	93 81       	ldd	r25, Z+3	; 0x03
 a42:	0c 5f       	subi	r16, 0xFC	; 252
 a44:	1f 4f       	sbci	r17, 0xFF	; 255
 a46:	06 c0       	rjmp	.+12     	; 0xa54 <__stack+0x1f5>
 a48:	60 81       	ld	r22, Z
 a4a:	71 81       	ldd	r23, Z+1	; 0x01
 a4c:	80 e0       	ldi	r24, 0x00	; 0
 a4e:	90 e0       	ldi	r25, 0x00	; 0
 a50:	0e 5f       	subi	r16, 0xFE	; 254
 a52:	1f 4f       	sbci	r17, 0xFF	; 255
 a54:	a3 01       	movw	r20, r6
 a56:	0e 94 0f 06 	call	0xc1e	; 0xc1e <__ultoa_invert>
 a5a:	88 2e       	mov	r8, r24
 a5c:	86 18       	sub	r8, r6
 a5e:	fb 2d       	mov	r31, r11
 a60:	ff 77       	andi	r31, 0x7F	; 127
 a62:	3f 2e       	mov	r3, r31
 a64:	36 fe       	sbrs	r3, 6
 a66:	0d c0       	rjmp	.+26     	; 0xa82 <__stack+0x223>
 a68:	23 2d       	mov	r18, r3
 a6a:	2e 7f       	andi	r18, 0xFE	; 254
 a6c:	a2 2e       	mov	r10, r18
 a6e:	89 14       	cp	r8, r9
 a70:	58 f4       	brcc	.+22     	; 0xa88 <__stack+0x229>
 a72:	34 fe       	sbrs	r3, 4
 a74:	0b c0       	rjmp	.+22     	; 0xa8c <__stack+0x22d>
 a76:	32 fc       	sbrc	r3, 2
 a78:	09 c0       	rjmp	.+18     	; 0xa8c <__stack+0x22d>
 a7a:	83 2d       	mov	r24, r3
 a7c:	8e 7e       	andi	r24, 0xEE	; 238
 a7e:	a8 2e       	mov	r10, r24
 a80:	05 c0       	rjmp	.+10     	; 0xa8c <__stack+0x22d>
 a82:	b8 2c       	mov	r11, r8
 a84:	a3 2c       	mov	r10, r3
 a86:	03 c0       	rjmp	.+6      	; 0xa8e <__stack+0x22f>
 a88:	b8 2c       	mov	r11, r8
 a8a:	01 c0       	rjmp	.+2      	; 0xa8e <__stack+0x22f>
 a8c:	b9 2c       	mov	r11, r9
 a8e:	a4 fe       	sbrs	r10, 4
 a90:	0f c0       	rjmp	.+30     	; 0xab0 <__stack+0x251>
 a92:	fe 01       	movw	r30, r28
 a94:	e8 0d       	add	r30, r8
 a96:	f1 1d       	adc	r31, r1
 a98:	80 81       	ld	r24, Z
 a9a:	80 33       	cpi	r24, 0x30	; 48
 a9c:	21 f4       	brne	.+8      	; 0xaa6 <__stack+0x247>
 a9e:	9a 2d       	mov	r25, r10
 aa0:	99 7e       	andi	r25, 0xE9	; 233
 aa2:	a9 2e       	mov	r10, r25
 aa4:	09 c0       	rjmp	.+18     	; 0xab8 <__stack+0x259>
 aa6:	a2 fe       	sbrs	r10, 2
 aa8:	06 c0       	rjmp	.+12     	; 0xab6 <__stack+0x257>
 aaa:	b3 94       	inc	r11
 aac:	b3 94       	inc	r11
 aae:	04 c0       	rjmp	.+8      	; 0xab8 <__stack+0x259>
 ab0:	8a 2d       	mov	r24, r10
 ab2:	86 78       	andi	r24, 0x86	; 134
 ab4:	09 f0       	breq	.+2      	; 0xab8 <__stack+0x259>
 ab6:	b3 94       	inc	r11
 ab8:	a3 fc       	sbrc	r10, 3
 aba:	11 c0       	rjmp	.+34     	; 0xade <__stack+0x27f>
 abc:	a0 fe       	sbrs	r10, 0
 abe:	06 c0       	rjmp	.+12     	; 0xacc <__stack+0x26d>
 ac0:	b2 14       	cp	r11, r2
 ac2:	88 f4       	brcc	.+34     	; 0xae6 <__stack+0x287>
 ac4:	28 0c       	add	r2, r8
 ac6:	92 2c       	mov	r9, r2
 ac8:	9b 18       	sub	r9, r11
 aca:	0e c0       	rjmp	.+28     	; 0xae8 <__stack+0x289>
 acc:	b2 14       	cp	r11, r2
 ace:	60 f4       	brcc	.+24     	; 0xae8 <__stack+0x289>
 ad0:	b6 01       	movw	r22, r12
 ad2:	80 e2       	ldi	r24, 0x20	; 32
 ad4:	90 e0       	ldi	r25, 0x00	; 0
 ad6:	0e 94 d3 05 	call	0xba6	; 0xba6 <fputc>
 ada:	b3 94       	inc	r11
 adc:	f7 cf       	rjmp	.-18     	; 0xacc <__stack+0x26d>
 ade:	b2 14       	cp	r11, r2
 ae0:	18 f4       	brcc	.+6      	; 0xae8 <__stack+0x289>
 ae2:	2b 18       	sub	r2, r11
 ae4:	02 c0       	rjmp	.+4      	; 0xaea <__stack+0x28b>
 ae6:	98 2c       	mov	r9, r8
 ae8:	21 2c       	mov	r2, r1
 aea:	a4 fe       	sbrs	r10, 4
 aec:	10 c0       	rjmp	.+32     	; 0xb0e <__stack+0x2af>
 aee:	b6 01       	movw	r22, r12
 af0:	80 e3       	ldi	r24, 0x30	; 48
 af2:	90 e0       	ldi	r25, 0x00	; 0
 af4:	0e 94 d3 05 	call	0xba6	; 0xba6 <fputc>
 af8:	a2 fe       	sbrs	r10, 2
 afa:	17 c0       	rjmp	.+46     	; 0xb2a <__stack+0x2cb>
 afc:	a1 fc       	sbrc	r10, 1
 afe:	03 c0       	rjmp	.+6      	; 0xb06 <__stack+0x2a7>
 b00:	88 e7       	ldi	r24, 0x78	; 120
 b02:	90 e0       	ldi	r25, 0x00	; 0
 b04:	02 c0       	rjmp	.+4      	; 0xb0a <__stack+0x2ab>
 b06:	88 e5       	ldi	r24, 0x58	; 88
 b08:	90 e0       	ldi	r25, 0x00	; 0
 b0a:	b6 01       	movw	r22, r12
 b0c:	0c c0       	rjmp	.+24     	; 0xb26 <__stack+0x2c7>
 b0e:	8a 2d       	mov	r24, r10
 b10:	86 78       	andi	r24, 0x86	; 134
 b12:	59 f0       	breq	.+22     	; 0xb2a <__stack+0x2cb>
 b14:	a1 fe       	sbrs	r10, 1
 b16:	02 c0       	rjmp	.+4      	; 0xb1c <__stack+0x2bd>
 b18:	8b e2       	ldi	r24, 0x2B	; 43
 b1a:	01 c0       	rjmp	.+2      	; 0xb1e <__stack+0x2bf>
 b1c:	80 e2       	ldi	r24, 0x20	; 32
 b1e:	a7 fc       	sbrc	r10, 7
 b20:	8d e2       	ldi	r24, 0x2D	; 45
 b22:	b6 01       	movw	r22, r12
 b24:	90 e0       	ldi	r25, 0x00	; 0
 b26:	0e 94 d3 05 	call	0xba6	; 0xba6 <fputc>
 b2a:	89 14       	cp	r8, r9
 b2c:	38 f4       	brcc	.+14     	; 0xb3c <__stack+0x2dd>
 b2e:	b6 01       	movw	r22, r12
 b30:	80 e3       	ldi	r24, 0x30	; 48
 b32:	90 e0       	ldi	r25, 0x00	; 0
 b34:	0e 94 d3 05 	call	0xba6	; 0xba6 <fputc>
 b38:	9a 94       	dec	r9
 b3a:	f7 cf       	rjmp	.-18     	; 0xb2a <__stack+0x2cb>
 b3c:	8a 94       	dec	r8
 b3e:	f3 01       	movw	r30, r6
 b40:	e8 0d       	add	r30, r8
 b42:	f1 1d       	adc	r31, r1
 b44:	80 81       	ld	r24, Z
 b46:	b6 01       	movw	r22, r12
 b48:	90 e0       	ldi	r25, 0x00	; 0
 b4a:	0e 94 d3 05 	call	0xba6	; 0xba6 <fputc>
 b4e:	81 10       	cpse	r8, r1
 b50:	f5 cf       	rjmp	.-22     	; 0xb3c <__stack+0x2dd>
 b52:	22 20       	and	r2, r2
 b54:	09 f4       	brne	.+2      	; 0xb58 <__stack+0x2f9>
 b56:	42 ce       	rjmp	.-892    	; 0x7dc <vfprintf+0x24>
 b58:	b6 01       	movw	r22, r12
 b5a:	80 e2       	ldi	r24, 0x20	; 32
 b5c:	90 e0       	ldi	r25, 0x00	; 0
 b5e:	0e 94 d3 05 	call	0xba6	; 0xba6 <fputc>
 b62:	2a 94       	dec	r2
 b64:	f6 cf       	rjmp	.-20     	; 0xb52 <__stack+0x2f3>
 b66:	f6 01       	movw	r30, r12
 b68:	86 81       	ldd	r24, Z+6	; 0x06
 b6a:	97 81       	ldd	r25, Z+7	; 0x07
 b6c:	02 c0       	rjmp	.+4      	; 0xb72 <__stack+0x313>
 b6e:	8f ef       	ldi	r24, 0xFF	; 255
 b70:	9f ef       	ldi	r25, 0xFF	; 255
 b72:	2b 96       	adiw	r28, 0x0b	; 11
 b74:	e2 e1       	ldi	r30, 0x12	; 18
 b76:	0c 94 89 06 	jmp	0xd12	; 0xd12 <__epilogue_restores__>

00000b7a <strnlen_P>:
 b7a:	fc 01       	movw	r30, r24
 b7c:	05 90       	lpm	r0, Z+
 b7e:	61 50       	subi	r22, 0x01	; 1
 b80:	70 40       	sbci	r23, 0x00	; 0
 b82:	01 10       	cpse	r0, r1
 b84:	d8 f7       	brcc	.-10     	; 0xb7c <strnlen_P+0x2>
 b86:	80 95       	com	r24
 b88:	90 95       	com	r25
 b8a:	8e 0f       	add	r24, r30
 b8c:	9f 1f       	adc	r25, r31
 b8e:	08 95       	ret

00000b90 <strnlen>:
 b90:	fc 01       	movw	r30, r24
 b92:	61 50       	subi	r22, 0x01	; 1
 b94:	70 40       	sbci	r23, 0x00	; 0
 b96:	01 90       	ld	r0, Z+
 b98:	01 10       	cpse	r0, r1
 b9a:	d8 f7       	brcc	.-10     	; 0xb92 <strnlen+0x2>
 b9c:	80 95       	com	r24
 b9e:	90 95       	com	r25
 ba0:	8e 0f       	add	r24, r30
 ba2:	9f 1f       	adc	r25, r31
 ba4:	08 95       	ret

00000ba6 <fputc>:
 ba6:	0f 93       	push	r16
 ba8:	1f 93       	push	r17
 baa:	cf 93       	push	r28
 bac:	df 93       	push	r29
 bae:	fb 01       	movw	r30, r22
 bb0:	23 81       	ldd	r18, Z+3	; 0x03
 bb2:	21 fd       	sbrc	r18, 1
 bb4:	03 c0       	rjmp	.+6      	; 0xbbc <fputc+0x16>
 bb6:	8f ef       	ldi	r24, 0xFF	; 255
 bb8:	9f ef       	ldi	r25, 0xFF	; 255
 bba:	2c c0       	rjmp	.+88     	; 0xc14 <fputc+0x6e>
 bbc:	22 ff       	sbrs	r18, 2
 bbe:	16 c0       	rjmp	.+44     	; 0xbec <fputc+0x46>
 bc0:	46 81       	ldd	r20, Z+6	; 0x06
 bc2:	57 81       	ldd	r21, Z+7	; 0x07
 bc4:	24 81       	ldd	r18, Z+4	; 0x04
 bc6:	35 81       	ldd	r19, Z+5	; 0x05
 bc8:	42 17       	cp	r20, r18
 bca:	53 07       	cpc	r21, r19
 bcc:	44 f4       	brge	.+16     	; 0xbde <fputc+0x38>
 bce:	a0 81       	ld	r26, Z
 bd0:	b1 81       	ldd	r27, Z+1	; 0x01
 bd2:	9d 01       	movw	r18, r26
 bd4:	2f 5f       	subi	r18, 0xFF	; 255
 bd6:	3f 4f       	sbci	r19, 0xFF	; 255
 bd8:	31 83       	std	Z+1, r19	; 0x01
 bda:	20 83       	st	Z, r18
 bdc:	8c 93       	st	X, r24
 bde:	26 81       	ldd	r18, Z+6	; 0x06
 be0:	37 81       	ldd	r19, Z+7	; 0x07
 be2:	2f 5f       	subi	r18, 0xFF	; 255
 be4:	3f 4f       	sbci	r19, 0xFF	; 255
 be6:	37 83       	std	Z+7, r19	; 0x07
 be8:	26 83       	std	Z+6, r18	; 0x06
 bea:	14 c0       	rjmp	.+40     	; 0xc14 <fputc+0x6e>
 bec:	8b 01       	movw	r16, r22
 bee:	ec 01       	movw	r28, r24
 bf0:	fb 01       	movw	r30, r22
 bf2:	00 84       	ldd	r0, Z+8	; 0x08
 bf4:	f1 85       	ldd	r31, Z+9	; 0x09
 bf6:	e0 2d       	mov	r30, r0
 bf8:	09 95       	icall
 bfa:	89 2b       	or	r24, r25
 bfc:	e1 f6       	brne	.-72     	; 0xbb6 <fputc+0x10>
 bfe:	d8 01       	movw	r26, r16
 c00:	16 96       	adiw	r26, 0x06	; 6
 c02:	8d 91       	ld	r24, X+
 c04:	9c 91       	ld	r25, X
 c06:	17 97       	sbiw	r26, 0x07	; 7
 c08:	01 96       	adiw	r24, 0x01	; 1
 c0a:	17 96       	adiw	r26, 0x07	; 7
 c0c:	9c 93       	st	X, r25
 c0e:	8e 93       	st	-X, r24
 c10:	16 97       	sbiw	r26, 0x06	; 6
 c12:	ce 01       	movw	r24, r28
 c14:	df 91       	pop	r29
 c16:	cf 91       	pop	r28
 c18:	1f 91       	pop	r17
 c1a:	0f 91       	pop	r16
 c1c:	08 95       	ret

00000c1e <__ultoa_invert>:
 c1e:	fa 01       	movw	r30, r20
 c20:	aa 27       	eor	r26, r26
 c22:	28 30       	cpi	r18, 0x08	; 8
 c24:	51 f1       	breq	.+84     	; 0xc7a <__ultoa_invert+0x5c>
 c26:	20 31       	cpi	r18, 0x10	; 16
 c28:	81 f1       	breq	.+96     	; 0xc8a <__ultoa_invert+0x6c>
 c2a:	e8 94       	clt
 c2c:	6f 93       	push	r22
 c2e:	6e 7f       	andi	r22, 0xFE	; 254
 c30:	6e 5f       	subi	r22, 0xFE	; 254
 c32:	7f 4f       	sbci	r23, 0xFF	; 255
 c34:	8f 4f       	sbci	r24, 0xFF	; 255
 c36:	9f 4f       	sbci	r25, 0xFF	; 255
 c38:	af 4f       	sbci	r26, 0xFF	; 255
 c3a:	b1 e0       	ldi	r27, 0x01	; 1
 c3c:	3e d0       	rcall	.+124    	; 0xcba <__ultoa_invert+0x9c>
 c3e:	b4 e0       	ldi	r27, 0x04	; 4
 c40:	3c d0       	rcall	.+120    	; 0xcba <__ultoa_invert+0x9c>
 c42:	67 0f       	add	r22, r23
 c44:	78 1f       	adc	r23, r24
 c46:	89 1f       	adc	r24, r25
 c48:	9a 1f       	adc	r25, r26
 c4a:	a1 1d       	adc	r26, r1
 c4c:	68 0f       	add	r22, r24
 c4e:	79 1f       	adc	r23, r25
 c50:	8a 1f       	adc	r24, r26
 c52:	91 1d       	adc	r25, r1
 c54:	a1 1d       	adc	r26, r1
 c56:	6a 0f       	add	r22, r26
 c58:	71 1d       	adc	r23, r1
 c5a:	81 1d       	adc	r24, r1
 c5c:	91 1d       	adc	r25, r1
 c5e:	a1 1d       	adc	r26, r1
 c60:	20 d0       	rcall	.+64     	; 0xca2 <__ultoa_invert+0x84>
 c62:	09 f4       	brne	.+2      	; 0xc66 <__ultoa_invert+0x48>
 c64:	68 94       	set
 c66:	3f 91       	pop	r19
 c68:	2a e0       	ldi	r18, 0x0A	; 10
 c6a:	26 9f       	mul	r18, r22
 c6c:	11 24       	eor	r1, r1
 c6e:	30 19       	sub	r19, r0
 c70:	30 5d       	subi	r19, 0xD0	; 208
 c72:	31 93       	st	Z+, r19
 c74:	de f6       	brtc	.-74     	; 0xc2c <__ultoa_invert+0xe>
 c76:	cf 01       	movw	r24, r30
 c78:	08 95       	ret
 c7a:	46 2f       	mov	r20, r22
 c7c:	47 70       	andi	r20, 0x07	; 7
 c7e:	40 5d       	subi	r20, 0xD0	; 208
 c80:	41 93       	st	Z+, r20
 c82:	b3 e0       	ldi	r27, 0x03	; 3
 c84:	0f d0       	rcall	.+30     	; 0xca4 <__ultoa_invert+0x86>
 c86:	c9 f7       	brne	.-14     	; 0xc7a <__ultoa_invert+0x5c>
 c88:	f6 cf       	rjmp	.-20     	; 0xc76 <__ultoa_invert+0x58>
 c8a:	46 2f       	mov	r20, r22
 c8c:	4f 70       	andi	r20, 0x0F	; 15
 c8e:	40 5d       	subi	r20, 0xD0	; 208
 c90:	4a 33       	cpi	r20, 0x3A	; 58
 c92:	18 f0       	brcs	.+6      	; 0xc9a <__ultoa_invert+0x7c>
 c94:	49 5d       	subi	r20, 0xD9	; 217
 c96:	31 fd       	sbrc	r19, 1
 c98:	40 52       	subi	r20, 0x20	; 32
 c9a:	41 93       	st	Z+, r20
 c9c:	02 d0       	rcall	.+4      	; 0xca2 <__ultoa_invert+0x84>
 c9e:	a9 f7       	brne	.-22     	; 0xc8a <__ultoa_invert+0x6c>
 ca0:	ea cf       	rjmp	.-44     	; 0xc76 <__ultoa_invert+0x58>
 ca2:	b4 e0       	ldi	r27, 0x04	; 4
 ca4:	a6 95       	lsr	r26
 ca6:	97 95       	ror	r25
 ca8:	87 95       	ror	r24
 caa:	77 95       	ror	r23
 cac:	67 95       	ror	r22
 cae:	ba 95       	dec	r27
 cb0:	c9 f7       	brne	.-14     	; 0xca4 <__ultoa_invert+0x86>
 cb2:	00 97       	sbiw	r24, 0x00	; 0
 cb4:	61 05       	cpc	r22, r1
 cb6:	71 05       	cpc	r23, r1
 cb8:	08 95       	ret
 cba:	9b 01       	movw	r18, r22
 cbc:	ac 01       	movw	r20, r24
 cbe:	0a 2e       	mov	r0, r26
 cc0:	06 94       	lsr	r0
 cc2:	57 95       	ror	r21
 cc4:	47 95       	ror	r20
 cc6:	37 95       	ror	r19
 cc8:	27 95       	ror	r18
 cca:	ba 95       	dec	r27
 ccc:	c9 f7       	brne	.-14     	; 0xcc0 <__ultoa_invert+0xa2>
 cce:	62 0f       	add	r22, r18
 cd0:	73 1f       	adc	r23, r19
 cd2:	84 1f       	adc	r24, r20
 cd4:	95 1f       	adc	r25, r21
 cd6:	a0 1d       	adc	r26, r0
 cd8:	08 95       	ret

00000cda <__prologue_saves__>:
 cda:	2f 92       	push	r2
 cdc:	3f 92       	push	r3
 cde:	4f 92       	push	r4
 ce0:	5f 92       	push	r5
 ce2:	6f 92       	push	r6
 ce4:	7f 92       	push	r7
 ce6:	8f 92       	push	r8
 ce8:	9f 92       	push	r9
 cea:	af 92       	push	r10
 cec:	bf 92       	push	r11
 cee:	cf 92       	push	r12
 cf0:	df 92       	push	r13
 cf2:	ef 92       	push	r14
 cf4:	ff 92       	push	r15
 cf6:	0f 93       	push	r16
 cf8:	1f 93       	push	r17
 cfa:	cf 93       	push	r28
 cfc:	df 93       	push	r29
 cfe:	cd b7       	in	r28, 0x3d	; 61
 d00:	de b7       	in	r29, 0x3e	; 62
 d02:	ca 1b       	sub	r28, r26
 d04:	db 0b       	sbc	r29, r27
 d06:	0f b6       	in	r0, 0x3f	; 63
 d08:	f8 94       	cli
 d0a:	de bf       	out	0x3e, r29	; 62
 d0c:	0f be       	out	0x3f, r0	; 63
 d0e:	cd bf       	out	0x3d, r28	; 61
 d10:	09 94       	ijmp

00000d12 <__epilogue_restores__>:
 d12:	2a 88       	ldd	r2, Y+18	; 0x12
 d14:	39 88       	ldd	r3, Y+17	; 0x11
 d16:	48 88       	ldd	r4, Y+16	; 0x10
 d18:	5f 84       	ldd	r5, Y+15	; 0x0f
 d1a:	6e 84       	ldd	r6, Y+14	; 0x0e
 d1c:	7d 84       	ldd	r7, Y+13	; 0x0d
 d1e:	8c 84       	ldd	r8, Y+12	; 0x0c
 d20:	9b 84       	ldd	r9, Y+11	; 0x0b
 d22:	aa 84       	ldd	r10, Y+10	; 0x0a
 d24:	b9 84       	ldd	r11, Y+9	; 0x09
 d26:	c8 84       	ldd	r12, Y+8	; 0x08
 d28:	df 80       	ldd	r13, Y+7	; 0x07
 d2a:	ee 80       	ldd	r14, Y+6	; 0x06
 d2c:	fd 80       	ldd	r15, Y+5	; 0x05
 d2e:	0c 81       	ldd	r16, Y+4	; 0x04
 d30:	1b 81       	ldd	r17, Y+3	; 0x03
 d32:	aa 81       	ldd	r26, Y+2	; 0x02
 d34:	b9 81       	ldd	r27, Y+1	; 0x01
 d36:	ce 0f       	add	r28, r30
 d38:	d1 1d       	adc	r29, r1
 d3a:	0f b6       	in	r0, 0x3f	; 63
 d3c:	f8 94       	cli
 d3e:	de bf       	out	0x3e, r29	; 62
 d40:	0f be       	out	0x3f, r0	; 63
 d42:	cd bf       	out	0x3d, r28	; 61
 d44:	ed 01       	movw	r28, r26
 d46:	08 95       	ret

00000d48 <_exit>:
 d48:	f8 94       	cli

00000d4a <__stop_program>:
 d4a:	ff cf       	rjmp	.-2      	; 0xd4a <__stop_program>

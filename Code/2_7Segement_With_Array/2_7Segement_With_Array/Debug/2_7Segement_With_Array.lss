
2_7Segement_With_Array.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000130  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000130  000001a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001ae  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001e0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000021c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000005a9  00000000  00000000  0000023c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000052d  00000000  00000000  000007e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000218  00000000  00000000  00000d12  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000f2c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002f6  00000000  00000000  00000f50  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000024  00000000  00000000  00001246  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  0000126a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e3       	ldi	r30, 0x30	; 48
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 96 00 	jmp	0x12c	; 0x12c <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
//Stroage at the flash array of led(A,B,C,D,E,F,G)
unsigned char seg[]={0b0111111,0b0000110,0b1011011,0b1001111,0b1100110,0b1101101,0b1111101,0b1001111,0b1111111,0b1101111};
int main(void)
{
	int i=0;
    DDRA=0x7f;
  82:	8f e7       	ldi	r24, 0x7F	; 127
  84:	8a bb       	out	0x1a, r24	; 26
	PORTA=seg[0];				//Initial by 0
  86:	e0 e6       	ldi	r30, 0x60	; 96
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	90 81       	ld	r25, Z
  8c:	9b bb       	out	0x1b, r25	; 27
	DDRB=0x7f;
  8e:	87 bb       	out	0x17, r24	; 23
	PORTA=seg[0];				//Initial by 0
  90:	80 81       	ld	r24, Z
  92:	8b bb       	out	0x1b, r24	; 27
	DDRC=0x00 ;
  94:	14 ba       	out	0x14, r1	; 20
	PORTC=0x01;					//PULL UP Resistance
  96:	81 e0       	ldi	r24, 0x01	; 1
  98:	85 bb       	out	0x15, r24	; 21
	SFIOR&=~(1<<PUD);           //PULL UP Resistance not be disable
  9a:	80 b7       	in	r24, 0x30	; 48
  9c:	8b 7f       	andi	r24, 0xFB	; 251
  9e:	80 bf       	out	0x30, r24	; 48
#include <util/delay.h>
//Stroage at the flash array of led(A,B,C,D,E,F,G)
unsigned char seg[]={0b0111111,0b0000110,0b1011011,0b1001111,0b1100110,0b1101101,0b1111101,0b1001111,0b1111111,0b1101111};
int main(void)
{
	int i=0;
  a0:	20 e0       	ldi	r18, 0x00	; 0
  a2:	30 e0       	ldi	r19, 0x00	; 0
    {
		while((PINC&0x01)==0x01);        //do no thing
		i++;
		if(i==100)
		i=0;
		PORTA=seg[i%10];
  a4:	ca e0       	ldi	r28, 0x0A	; 10
  a6:	d0 e0       	ldi	r29, 0x00	; 0
	DDRC=0x00 ;
	PORTC=0x01;					//PULL UP Resistance
	SFIOR&=~(1<<PUD);           //PULL UP Resistance not be disable
    while (1) 
    {
		while((PINC&0x01)==0x01);        //do no thing
  a8:	98 99       	sbic	0x13, 0	; 19
  aa:	fe cf       	rjmp	.-4      	; 0xa8 <main+0x26>
		i++;
  ac:	2f 5f       	subi	r18, 0xFF	; 255
  ae:	3f 4f       	sbci	r19, 0xFF	; 255
		if(i==100)
  b0:	24 36       	cpi	r18, 0x64	; 100
  b2:	31 05       	cpc	r19, r1
  b4:	11 f4       	brne	.+4      	; 0xba <main+0x38>
		i=0;
  b6:	20 e0       	ldi	r18, 0x00	; 0
  b8:	30 e0       	ldi	r19, 0x00	; 0
		PORTA=seg[i%10];
  ba:	c9 01       	movw	r24, r18
  bc:	be 01       	movw	r22, r28
  be:	0e 94 6e 00 	call	0xdc	; 0xdc <__divmodhi4>
  c2:	fc 01       	movw	r30, r24
  c4:	e0 5a       	subi	r30, 0xA0	; 160
  c6:	ff 4f       	sbci	r31, 0xFF	; 255
  c8:	80 81       	ld	r24, Z
  ca:	8b bb       	out	0x1b, r24	; 27
		PORTB=seg[i/10];
  cc:	fb 01       	movw	r30, r22
  ce:	e0 5a       	subi	r30, 0xA0	; 160
  d0:	ff 4f       	sbci	r31, 0xFF	; 255
  d2:	80 81       	ld	r24, Z
  d4:	88 bb       	out	0x18, r24	; 24
		while((PINC&0x01)==0x00);		//when i still push do no thing
  d6:	98 9b       	sbis	0x13, 0	; 19
  d8:	fe cf       	rjmp	.-4      	; 0xd6 <main+0x54>
  da:	e6 cf       	rjmp	.-52     	; 0xa8 <main+0x26>

000000dc <__divmodhi4>:
  dc:	97 fb       	bst	r25, 7
  de:	07 2e       	mov	r0, r23
  e0:	16 f4       	brtc	.+4      	; 0xe6 <__divmodhi4+0xa>
  e2:	00 94       	com	r0
  e4:	07 d0       	rcall	.+14     	; 0xf4 <__divmodhi4_neg1>
  e6:	77 fd       	sbrc	r23, 7
  e8:	09 d0       	rcall	.+18     	; 0xfc <__divmodhi4_neg2>
  ea:	0e 94 82 00 	call	0x104	; 0x104 <__udivmodhi4>
  ee:	07 fc       	sbrc	r0, 7
  f0:	05 d0       	rcall	.+10     	; 0xfc <__divmodhi4_neg2>
  f2:	3e f4       	brtc	.+14     	; 0x102 <__divmodhi4_exit>

000000f4 <__divmodhi4_neg1>:
  f4:	90 95       	com	r25
  f6:	81 95       	neg	r24
  f8:	9f 4f       	sbci	r25, 0xFF	; 255
  fa:	08 95       	ret

000000fc <__divmodhi4_neg2>:
  fc:	70 95       	com	r23
  fe:	61 95       	neg	r22
 100:	7f 4f       	sbci	r23, 0xFF	; 255

00000102 <__divmodhi4_exit>:
 102:	08 95       	ret

00000104 <__udivmodhi4>:
 104:	aa 1b       	sub	r26, r26
 106:	bb 1b       	sub	r27, r27
 108:	51 e1       	ldi	r21, 0x11	; 17
 10a:	07 c0       	rjmp	.+14     	; 0x11a <__udivmodhi4_ep>

0000010c <__udivmodhi4_loop>:
 10c:	aa 1f       	adc	r26, r26
 10e:	bb 1f       	adc	r27, r27
 110:	a6 17       	cp	r26, r22
 112:	b7 07       	cpc	r27, r23
 114:	10 f0       	brcs	.+4      	; 0x11a <__udivmodhi4_ep>
 116:	a6 1b       	sub	r26, r22
 118:	b7 0b       	sbc	r27, r23

0000011a <__udivmodhi4_ep>:
 11a:	88 1f       	adc	r24, r24
 11c:	99 1f       	adc	r25, r25
 11e:	5a 95       	dec	r21
 120:	a9 f7       	brne	.-22     	; 0x10c <__udivmodhi4_loop>
 122:	80 95       	com	r24
 124:	90 95       	com	r25
 126:	bc 01       	movw	r22, r24
 128:	cd 01       	movw	r24, r26
 12a:	08 95       	ret

0000012c <_exit>:
 12c:	f8 94       	cli

0000012e <__stop_program>:
 12e:	ff cf       	rjmp	.-2      	; 0x12e <__stop_program>


Blinking_Led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000206  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000027a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  0000027a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000027a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002ac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  000002e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000088e  00000000  00000000  00000348  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000595  00000000  00000000  00000bd6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000453  00000000  00000000  0000116b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a4  00000000  00000000  000015c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000384  00000000  00000000  00001664  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000240  00000000  00000000  000019e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00001c28  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <main>
  74:	0c 94 01 01 	jmp	0x202	; 0x202 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <pattern_1_A>:
    }
}

void pattern_1_A()
{
	PORTA=0x01;
  7c:	81 e0       	ldi	r24, 0x01	; 1
  7e:	8b bb       	out	0x1b, r24	; 27
	for(i=0;i<8;i++)
  80:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <_edata>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  84:	87 ea       	ldi	r24, 0xA7	; 167
  86:	91 e6       	ldi	r25, 0x61	; 97
  88:	01 97       	sbiw	r24, 0x01	; 1
  8a:	f1 f7       	brne	.-4      	; 0x88 <pattern_1_A+0xc>
  8c:	00 c0       	rjmp	.+0      	; 0x8e <pattern_1_A+0x12>
  8e:	00 00       	nop
	{
		_delay_ms(100);
		PORTA=(PORTA<<1);
  90:	8b b3       	in	r24, 0x1b	; 27
  92:	88 0f       	add	r24, r24
  94:	8b bb       	out	0x1b, r24	; 27
}

void pattern_1_A()
{
	PORTA=0x01;
	for(i=0;i<8;i++)
  96:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
  9a:	8f 5f       	subi	r24, 0xFF	; 255
  9c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
  a0:	88 30       	cpi	r24, 0x08	; 8
  a2:	80 f3       	brcs	.-32     	; 0x84 <pattern_1_A+0x8>
	{
		_delay_ms(100);
		PORTA=(PORTA<<1);
	}
}
  a4:	08 95       	ret

000000a6 <pattern_2_A>:
void pattern_2_A()
{
	PORTA=0x80;
  a6:	80 e8       	ldi	r24, 0x80	; 128
  a8:	8b bb       	out	0x1b, r24	; 27
	for(i=0;i<8;i++)
  aa:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <_edata>
  ae:	87 ea       	ldi	r24, 0xA7	; 167
  b0:	91 e6       	ldi	r25, 0x61	; 97
  b2:	01 97       	sbiw	r24, 0x01	; 1
  b4:	f1 f7       	brne	.-4      	; 0xb2 <pattern_2_A+0xc>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <pattern_2_A+0x12>
  b8:	00 00       	nop
	{
		_delay_ms(100);
		PORTA=(PORTA>>1);
  ba:	8b b3       	in	r24, 0x1b	; 27
  bc:	86 95       	lsr	r24
  be:	8b bb       	out	0x1b, r24	; 27
	}
}
void pattern_2_A()
{
	PORTA=0x80;
	for(i=0;i<8;i++)
  c0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
  c4:	8f 5f       	subi	r24, 0xFF	; 255
  c6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
  ca:	88 30       	cpi	r24, 0x08	; 8
  cc:	80 f3       	brcs	.-32     	; 0xae <pattern_2_A+0x8>
	{
		_delay_ms(100);
		PORTA=(PORTA>>1);
	}
}
  ce:	08 95       	ret

000000d0 <pattern_3_A>:
void pattern_3_A()
{
	PORTA=0x01;
  d0:	81 e0       	ldi	r24, 0x01	; 1
  d2:	8b bb       	out	0x1b, r24	; 27
	for(i=0;i<8;i++)
  d4:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <_edata>
  d8:	87 ea       	ldi	r24, 0xA7	; 167
  da:	91 e6       	ldi	r25, 0x61	; 97
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	f1 f7       	brne	.-4      	; 0xdc <pattern_3_A+0xc>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <pattern_3_A+0x12>
  e2:	00 00       	nop
	{
		_delay_ms(100);
		PORTA|=(PORTA<<1);
  e4:	8b b3       	in	r24, 0x1b	; 27
  e6:	9b b3       	in	r25, 0x1b	; 27
  e8:	88 0f       	add	r24, r24
  ea:	89 2b       	or	r24, r25
  ec:	8b bb       	out	0x1b, r24	; 27
	}
}
void pattern_3_A()
{
	PORTA=0x01;
	for(i=0;i<8;i++)
  ee:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
  f2:	8f 5f       	subi	r24, 0xFF	; 255
  f4:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
  f8:	88 30       	cpi	r24, 0x08	; 8
  fa:	70 f3       	brcs	.-36     	; 0xd8 <pattern_3_A+0x8>
	{
		_delay_ms(100);
		PORTA|=(PORTA<<1);
	}
}
  fc:	08 95       	ret

000000fe <pattern_4_A>:
void pattern_4_A()
{
	PORTA=0xff;
  fe:	8f ef       	ldi	r24, 0xFF	; 255
 100:	8b bb       	out	0x1b, r24	; 27
	for(i=0;i<8;i++)
 102:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <_edata>
 106:	87 ea       	ldi	r24, 0xA7	; 167
 108:	91 e6       	ldi	r25, 0x61	; 97
 10a:	01 97       	sbiw	r24, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <pattern_4_A+0xc>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <pattern_4_A+0x12>
 110:	00 00       	nop
	{
		_delay_ms(100);
		PORTA=(PORTA>>1);
 112:	8b b3       	in	r24, 0x1b	; 27
 114:	86 95       	lsr	r24
 116:	8b bb       	out	0x1b, r24	; 27
	}
}
void pattern_4_A()
{
	PORTA=0xff;
	for(i=0;i<8;i++)
 118:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 11c:	8f 5f       	subi	r24, 0xFF	; 255
 11e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
 122:	88 30       	cpi	r24, 0x08	; 8
 124:	80 f3       	brcs	.-32     	; 0x106 <pattern_4_A+0x8>
	{
		_delay_ms(100);
		PORTA=(PORTA>>1);
	}
}
 126:	08 95       	ret

00000128 <pattern_1_B>:
void pattern_1_B()
{
	PORTB=0x01;
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	88 bb       	out	0x18, r24	; 24
	for(i=0;i<8;i++)
 12c:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <_edata>
 130:	87 ea       	ldi	r24, 0xA7	; 167
 132:	91 e6       	ldi	r25, 0x61	; 97
 134:	01 97       	sbiw	r24, 0x01	; 1
 136:	f1 f7       	brne	.-4      	; 0x134 <pattern_1_B+0xc>
 138:	00 c0       	rjmp	.+0      	; 0x13a <pattern_1_B+0x12>
 13a:	00 00       	nop
	{
		_delay_ms(100);
		PORTB=(PORTB<<1);
 13c:	88 b3       	in	r24, 0x18	; 24
 13e:	88 0f       	add	r24, r24
 140:	88 bb       	out	0x18, r24	; 24
	}
}
void pattern_1_B()
{
	PORTB=0x01;
	for(i=0;i<8;i++)
 142:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 146:	8f 5f       	subi	r24, 0xFF	; 255
 148:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
 14c:	88 30       	cpi	r24, 0x08	; 8
 14e:	80 f3       	brcs	.-32     	; 0x130 <pattern_1_B+0x8>
	{
		_delay_ms(100);
		PORTB=(PORTB<<1);
	}
}
 150:	08 95       	ret

00000152 <pattern_2_B>:
void pattern_2_B()
{
	PORTB=0x80;
 152:	80 e8       	ldi	r24, 0x80	; 128
 154:	88 bb       	out	0x18, r24	; 24
	for(i=0;i<8;i++)
 156:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <_edata>
 15a:	87 ea       	ldi	r24, 0xA7	; 167
 15c:	91 e6       	ldi	r25, 0x61	; 97
 15e:	01 97       	sbiw	r24, 0x01	; 1
 160:	f1 f7       	brne	.-4      	; 0x15e <pattern_2_B+0xc>
 162:	00 c0       	rjmp	.+0      	; 0x164 <pattern_2_B+0x12>
 164:	00 00       	nop
	{
		_delay_ms(100);
		PORTB=(PORTB>>1);
 166:	88 b3       	in	r24, 0x18	; 24
 168:	86 95       	lsr	r24
 16a:	88 bb       	out	0x18, r24	; 24
	}
}
void pattern_2_B()
{
	PORTB=0x80;
	for(i=0;i<8;i++)
 16c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 170:	8f 5f       	subi	r24, 0xFF	; 255
 172:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
 176:	88 30       	cpi	r24, 0x08	; 8
 178:	80 f3       	brcs	.-32     	; 0x15a <pattern_2_B+0x8>
	{
		_delay_ms(100);
		PORTB=(PORTB>>1);
	}
}
 17a:	08 95       	ret

0000017c <pattern_3_B>:
void pattern_3_B()
{
	PORTB=0x01;
 17c:	81 e0       	ldi	r24, 0x01	; 1
 17e:	88 bb       	out	0x18, r24	; 24
	for(i=0;i<8;i++)
 180:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <_edata>
 184:	87 ea       	ldi	r24, 0xA7	; 167
 186:	91 e6       	ldi	r25, 0x61	; 97
 188:	01 97       	sbiw	r24, 0x01	; 1
 18a:	f1 f7       	brne	.-4      	; 0x188 <pattern_3_B+0xc>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <pattern_3_B+0x12>
 18e:	00 00       	nop
	{
		_delay_ms(100);
		PORTB|=(PORTB<<1);
 190:	88 b3       	in	r24, 0x18	; 24
 192:	98 b3       	in	r25, 0x18	; 24
 194:	88 0f       	add	r24, r24
 196:	89 2b       	or	r24, r25
 198:	88 bb       	out	0x18, r24	; 24
	}
}
void pattern_3_B()
{
	PORTB=0x01;
	for(i=0;i<8;i++)
 19a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 19e:	8f 5f       	subi	r24, 0xFF	; 255
 1a0:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
 1a4:	88 30       	cpi	r24, 0x08	; 8
 1a6:	70 f3       	brcs	.-36     	; 0x184 <pattern_3_B+0x8>
	{
		_delay_ms(100);
		PORTB|=(PORTB<<1);
	}
}
 1a8:	08 95       	ret

000001aa <pattern_4_B>:
void pattern_4_B()
{
	PORTB=0xff;
 1aa:	8f ef       	ldi	r24, 0xFF	; 255
 1ac:	88 bb       	out	0x18, r24	; 24
	for(i=0;i<8;i++)
 1ae:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <_edata>
 1b2:	87 ea       	ldi	r24, 0xA7	; 167
 1b4:	91 e6       	ldi	r25, 0x61	; 97
 1b6:	01 97       	sbiw	r24, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <pattern_4_B+0xc>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <pattern_4_B+0x12>
 1bc:	00 00       	nop
	{
		_delay_ms(100);
		PORTB=(PORTB>>1);
 1be:	88 b3       	in	r24, 0x18	; 24
 1c0:	86 95       	lsr	r24
 1c2:	88 bb       	out	0x18, r24	; 24
	}
}
void pattern_4_B()
{
	PORTB=0xff;
	for(i=0;i<8;i++)
 1c4:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 1c8:	8f 5f       	subi	r24, 0xFF	; 255
 1ca:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
 1ce:	88 30       	cpi	r24, 0x08	; 8
 1d0:	80 f3       	brcs	.-32     	; 0x1b2 <pattern_4_B+0x8>
	{
		_delay_ms(100);
		PORTB=(PORTB>>1);
	}
 1d2:	08 95       	ret

000001d4 <main>:
void pattern_3_B();
void pattern_4_B();

int main(void)
{
    DDRA=0xff;
 1d4:	9f ef       	ldi	r25, 0xFF	; 255
 1d6:	9a bb       	out	0x1a, r25	; 26
	PORTA=0x01;
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	8b bb       	out	0x1b, r24	; 27
    DDRB=0xff;
 1dc:	97 bb       	out	0x17, r25	; 23
    PORTB=0x01;
 1de:	88 bb       	out	0x18, r24	; 24
    while (1) 
    {
	    pattern_1_A();
 1e0:	0e 94 3e 00 	call	0x7c	; 0x7c <pattern_1_A>
		pattern_1_B();
 1e4:	0e 94 94 00 	call	0x128	; 0x128 <pattern_1_B>
		pattern_2_A();
 1e8:	0e 94 53 00 	call	0xa6	; 0xa6 <pattern_2_A>
		pattern_2_B();
 1ec:	0e 94 a9 00 	call	0x152	; 0x152 <pattern_2_B>
		pattern_3_A();
 1f0:	0e 94 68 00 	call	0xd0	; 0xd0 <pattern_3_A>
		pattern_3_B();
 1f4:	0e 94 be 00 	call	0x17c	; 0x17c <pattern_3_B>
		pattern_4_A();
 1f8:	0e 94 7f 00 	call	0xfe	; 0xfe <pattern_4_A>
		pattern_4_B();
 1fc:	0e 94 d5 00 	call	0x1aa	; 0x1aa <pattern_4_B>
 200:	ef cf       	rjmp	.-34     	; 0x1e0 <main+0xc>

00000202 <_exit>:
 202:	f8 94       	cli

00000204 <__stop_program>:
 204:	ff cf       	rjmp	.-2      	; 0x204 <__stop_program>
